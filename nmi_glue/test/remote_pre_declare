#!/usr/bin/env perl

######################################################################
# $Id: remote_pre_declare,v 1.1.4.4.122.2 2006-02-09 22:33:51 bt Exp $
# script to set up for Condor testsuite run
######################################################################

use Cwd;

my $BaseDir = getcwd();

if($ENV{NMI_PLATFORM} eq "x86_winnt_5.1"){
	my $newbase = `cygpath -u $BaseDir`;
	chomp($newbase);
	$BaseDir = $newbase;
} 
my $SrcDir = "$BaseDir/src";
my $vers_file = "CONDOR-VERSION";

# autoflush our STDOUT
$| = 1;

######################################################################
# grab the Condor version out of the version file so we can unpack our 
# source tarball and get everything ready for the other steps.
######################################################################

print "Finding version of Condor\n";
open( VERS, "$vers_file" ) || die "Can't open $vers_file: $!\n";
while( <VERS> ) {
    chomp;
    $vers = $_;
}
close( VERS );
if( ! $vers ) {
    die "Can't find Condor version in $vers_file!\n";
}
print "Condor version: $vers\n";
$src_file = "condor-$vers.tar.gz";
-f $src_file || die "$src_file does not exist!\n";

print "**************************************************\n";
print "Untarring Condor source tarball\n";
print "**************************************************\n";
open( TAR, "tar -zxvf $src_file|" ) ||
    die "Can't open(tar -zxvf $src_file): $!\n";
while( <TAR> ) {
    print $_;
}
close( TAR );
print "**************************************************\n";
if( $? ) {
    die "Tar failed with status $?\n";
}
print "Tar completed successfully, moving contents to base directory\n";

system( "cp -r condor-$vers/* $BaseDir" );
if( $? ) {
    die "moving condor-$vers/* to $BaseDir failed with status $?\n";
 }
print "Move completed successfully\n";


######################################################################
# set up environment and create env file for the rest of the scripts
######################################################################

print "Setting up environtment file 'setup_test_env' for other scripts\n";
open( ENVSETUP, ">setup_test_env" ) || 
    die "cannot open setup_test_env for writing\n";

print ENVSETUP "BASE_DIR=$BaseDir\n";
print ENVSETUP "export BASE_DIR\n";
print ENVSETUP "CONDOR_VERSION=$vers\n";
print ENVSETUP "export CONDOR_VERSION\n";

if($ENV{NMI_PLATFORM} ne "x86_winnt_5.1")
{
    print ENVSETUP "PATH=$BaseDir/nmi_glue/test:$BaseDir/condor/bin:$BaseDir/condor/sbin:\$PATH\n";
    print ENVSETUP "CONDOR_CONFIG=$BaseDir/condor/etc/condor_config\n";
}
else
{
    # windows distribution has condor all in bin
	my $win32basedir = $BaseDir;
    my $gluedir = `cygpath -u $BaseDir/nmi_glue/test`;
    my $condordir = `cygpath -u $BaseDir/condor/bin`;
    my $configfile = `cygpath -u $BaseDir/condor/condor_config`;
    chomp($gluedir);
    chomp($condordir);
    chomp($configfile);
    my $otherplaces = "/bin:/usr/bin";
    $win32basedir =~ s/\/cygdrive\/c\//C:\//;
    print "Windows BaseDir is <<$win32basedir>>\n";
    print "Gluedir is <<$gluedir>>\n";
    print "condordir is <<$condordir>>\n";
    print ENVSETUP "PATH=$gluedir:$condordir:$otherplaces:\$PATH\n";
    #print ENVSETUP "CONDOR_CONFIG=$configfile\n";
    print ENVSETUP "CONDOR_CONFIG=$win32basedir/condor/condor_config\n";
}

print ENVSETUP "export CONDOR_CONFIG\n";
print ENVSETUP "export PATH\n";
print ENVSETUP "SRC_DIR=$SrcDir\n";
print ENVSETUP "export SRC_DIR\n";

system("cp setup_test_env $BaseDir");
print "All steps completed successfully\n";

