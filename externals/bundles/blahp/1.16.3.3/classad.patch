diff -u -r org.glite.ce.blahp/src/classad_binary_op_unwind.C org.glite.ce.blahp.patched/src/classad_binary_op_unwind.C
--- org.glite.ce.blahp/src/classad_binary_op_unwind.C	2010-03-17 08:19:34.000000000 -0500
+++ org.glite.ce.blahp.patched/src/classad_binary_op_unwind.C	2012-01-20 16:17:36.457114000 -0600
@@ -39,10 +39,10 @@
 
 #include <strings.h> // strcasecmp
 
-#include "classad_distribution.h"
+#include "classad/classad_distribution.h"
 #include "classad_binary_op_unwind.h"
 
-#ifdef WANT_NAMESPACES
+#if 1
 namespace classad {
 #endif
 
@@ -120,7 +120,7 @@
       //state.SetScopes( ad );
 
       value->Evaluate(state,v);
-      int intres;
+      IntType intres;
       std::string strres;
 
       if (v.IsIntegerValue( intres ))
@@ -221,6 +221,6 @@
   return;
 }
 
-#ifdef WANT_NAMESPACES
+#if 1
 } // end of classad namespace
 #endif
diff -u -r org.glite.ce.blahp/src/classad_binary_op_unwind.h org.glite.ce.blahp.patched/src/classad_binary_op_unwind.h
--- org.glite.ce.blahp/src/classad_binary_op_unwind.h	2010-03-17 08:19:34.000000000 -0500
+++ org.glite.ce.blahp.patched/src/classad_binary_op_unwind.h	2012-01-20 16:16:13.223577000 -0600
@@ -33,12 +33,12 @@
 #
 */
 
-#include "classad_distribution.h"
+#include "classad/classad_distribution.h"
 
 #ifndef __CLASSAD_BINARY_OP_UNWIND_H__
 #define __CLASSAD_BINARY_OP_UNWIND_H__
 
-#ifdef WANT_NAMESPACES
+#if 1
 using namespace classad;
 
 namespace classad {
@@ -64,7 +64,7 @@
         std::vector<std::string> m_unwind_output;
 };
 
-#ifdef WANT_NAMESPACES
+#if 1
 } // end of classad namespace
 #endif
 
diff -u -r org.glite.ce.blahp/src/classad_c_helper.C org.glite.ce.blahp.patched/src/classad_c_helper.C
--- org.glite.ce.blahp/src/classad_c_helper.C	2010-03-17 08:19:34.000000000 -0500
+++ org.glite.ce.blahp.patched/src/classad_c_helper.C	2012-01-20 16:21:08.147393000 -0600
@@ -38,10 +38,10 @@
 */
 
 #include <string.h>
-#include "classad_distribution.h"
+#include "classad/classad_distribution.h"
 #include "classad_binary_op_unwind.h"
 
-#ifdef WANT_NAMESPACES
+#if 1
 using namespace classad;
 #endif
 
@@ -204,11 +204,16 @@
     ClassAd *ad = (ClassAd *)cad;
 
     Value v;
+    IntType i;
     ad->EvaluateAttr(attribute_name, v);
 
-    if (v.IsIntegerValue( *result ))
+    if (v.IsIntegerValue(i))
      {
-      return C_CLASSAD_NO_ERROR;
+	if (i<=INT_MAX)
+	{
+		*result = (int) i;
+      		return C_CLASSAD_NO_ERROR;
+	}
      }
     
     return C_CLASSAD_VALUE_NOT_FOUND;
@@ -294,6 +299,8 @@
                              int value)
    {
     ClassAd *ad;
+    IntType i = value;
+
     if ((*cad) == NULL) 
      {
       ad = new ClassAd;
@@ -301,7 +308,7 @@
      }
     else ad = (ClassAd *)(*cad);
 
-    if (ad->InsertAttr (name, value)) return C_CLASSAD_NO_ERROR; 
+    if (ad->InsertAttr (name, i)) return C_CLASSAD_NO_ERROR; 
     else                              return C_CLASSAD_INSERT_FAILED;
    }
 
