CFLAGS = $(STD_C_FLAGS)
EXTRACT = FORK.o KILL.o SIGACTION.o
STUBS = switches.o switches.special.o
UTIL = syscall_mode.o remote_syscall.o debug_init.o senders.o
LIB_OBJ = $(EXTRACT) $(STUBS) $(UTIL)
all_target(condor_syscall_lib.a)

uppercase_target($(SIMPLE_LIBC),fork.o,FORK.o,fork,FORK)
uppercase_target($(SIMPLE_LIBC),kill.o,KILL.o,kill,KILL)
uppercase_target($(SIMPLE_LIBC),sigaction.o,SIGACTION.o,sigaction,SIGACTION)
library_target(condor_syscall_lib.a,$(LIB_OBJ),release)
program_target(ToUpper,ToUpper.o,$(NULL),release)

switches.c: syscall.tmpl switches.prologue stub_gen
	stub_gen -mode switches  -p switches.prologue < syscall.tmpl > switches.c

senders.c: syscall.tmpl stub_gen senders.prologue senders.epilogue
	stub_gen -mode senders -p senders.prologue -e senders.epilogue \
	< syscall.tmpl > senders.c

lex.yy.c: stub_gen_lex.l scanner.h y.tab.h
	lex stub_gen_lex.l

y.tab.c: stub_gen_yacc.y scanner.h
	yacc -d stub_gen_yacc.y

clean::
	rm -f lex.yy.c y.tab.c y.tab.h switches.c senders.c

program_target(stub_gen,y.tab.o lex.yy.o,$(NULL),no_realeas)
