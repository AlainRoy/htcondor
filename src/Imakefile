CFLAGS = $(STD_C_FLAGS)


#if !HAS_FORTRAN
#define test_suite_F
#endif

#if !HAS_X
#define kbdd
#endif

#if !DOES_CHECKPOINTING
#define standalone
#define test_suite_C
#endif

#if !IS_SPARC_CMOS
#define cmos_specials
#define test_suite_CMOS
#endif

#define Libraries	c++_util util_lib xdr_lib $(SYSCALL_LIB)
#define Programs \
	scripts standalone tools shadow starter startd \
	schedd kbdd  negotiator collector globalq master prio q rm \
	submit.v2 submit.v3  on off \
	cmos_specials test_suite_CMOS test_suite_C test_suite_F
#define Directories release_dir release_dir/bin release_dir/lib
all: makefiles Directories Libraries Programs
release:: makefiles Directories

simple_dir_target(release_dir)
simple_dir_target(release_dir/bin)
simple_dir_target(release_dir/lib)
object_target(util_lib)
object_target(c++_util)
object_target(xdr_lib)
object_target($(SYSCALL_LIB))
#if DOES_CHECKPOINTING
object_target(standalone)
#endif
object_target(submit.v2)
object_target(submit.v3)

object_target(tools)
object_target(shadow)
object_target(starter)
object_target(startd)
object_target(schedd)
#if HAS_X
object_target(kbdd)
#endif
object_target(negotiator)
object_target(collector)
object_target(globalq)
object_target(master)
object_target(prio)
object_target(q)
object_target(rm)
object_target(on)
object_target(off)
object_target(scripts)

#if IS_SPARC_CMOS
object_target(cmos_specials)
object_target(test_suite_CMOS)
#endif

#if DOES_CHECKPOINTING
object_target(test_suite_C)
#if HAS_FORTRAN
object_target(test_suite_F)
#endif
#endif

check_platform_target
