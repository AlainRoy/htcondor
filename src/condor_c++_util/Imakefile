all_target(cplus_lib.a liburl.a libcondorapi.a)

C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) -Wall 
CFLAGS = $(STD_C_FLAGS) -Wall
LIB = $(STD_LIBS)

#if !HAS_FLOCK
FLOCK_OBJ = ../condor_util_lib/flock.o
#endif 

URL_OBJ = url_condor.o cbstp_url.o file_url.o http_url.o filter_url.o \
	mailto_url.o cfilter_url.o ftp_url.o include_urls.o mkargv.o

API_OBJ = generic_query.o condor_query.o condor_q.o ad_printmask.o \
			condor_event.o user_log.o classadList.o strnewp.o

CONLIBAPI_OBJ = $(API_OBJ) \
	file_lock.o \
	../condor_util_lib/dprintf_common.o \
	../condor_util_lib/dprintf.o \
	../condor_util_lib/mkargv.o \
	../condor_util_lib/except.o \
	../condor_util_lib/lock_file.NON_POSIX.o \
	$(FLOCK_OBJ) \
	condor_environ.o \
	../condor_util_lib/setsyscalls.o \
	uids.o \
	../condor_util_lib/chomp.o \
	get_mysubsystem.o \
	my_subsystem.o \
	distribution.o \
	my_distribution.o \
	libcondorapi_stubs.o \
	strnewp.o

DAEMON_CLIENT_OBJ = daemon.o daemon_types.o dc_shadow.o dc_startd.o \
	dc_schedd.o

OBJ = state_machine_driver.o event_handler.o name_tab.o NON_POSIX.select.o \
	alarm.o alloc.o user_job_policy.o classad_support.o \
	directory.o my_hostname.o file_lock.o sig_name.o \
	email.o env.o environ.o c++_util_instantiate.o \
	string_list.o condor_event.o $(URL_OBJ) get_daemon_addr.o \
	user_log.o config.o condor_config.o stringSpace.o condor_state.o \
	$(API_OBJ) $(DAEMON_CLIENT_OBJ) \
	classad_hashtable.o classad_log.o log_transaction.o log.o \
	classad_collection.o usagemon.o print_wrapped_text.o \
	classad_helpers.o classad_merge.o \
	linebuffer.o cron.o cronmgr.o cronjob.o distribution.o \
	condor_attributes.o condor_environ.o \
	get_full_hostname.o format_time.o renice_self.o condor_version.o \
	limit.o my_subsystem.o killfamily.o access.o get_mysubsystem.o \
	strnewp.o memory_file.o my_username.o misc_utils.o file_transfer.o \
	uids.o metric_units.o condor_ver_info.o condor_cred_base.o \
	condor_md.o condor_credential.o \
	HashTable.o MyString.o \
	KeyCache.o dc_stub.o which.o iso_dates.o java_config.o \
	RegExer.o my_distribution.o


library_target( cplus_lib.a,$(OBJ))
library_target( liburl.a,$(URL_OBJ))
library_target( libcondorapi.a,$(CONLIBAPI_OBJ) )

c_plus_target(test_locks,test_locks.o,$(LIB))
c_plus_target(test_stringSpace, test_stringSpace.o,$(LIB))
c_plus_target(test_iso_dates, test_iso_dates.o,$(LIB))
c_plus_target(test_user_job_policy, test_user_job_policy.o,$(LIB))
c_plus_target(test_classad_support, test_classad_support.o,$(LIB))
c_plus_target(test_classad_merge, test_classad_merge.o,$(LIB))
c_plus_target(test_mystring, test_mystring.o, $(LIB))

c_plus_target(cat_url, cat_url.o, liburl.a)
c_plus_target(access.t, access.t.o, $(LIB))
c_plus_target(killfamily.t, killfamily.t.o, $(LIB))
pure_c_plus_target(killfamily.t.pure, killfamily.t.o, $(LIB))
purecov_c_plus_target(killfamily.t.pc, killfamily.t.o, $(LIB))

c_plus_target(my_hostname.t, my_hostname.t.o, $(LIB))
pure_c_plus_target(my_hostname.t.pure, my_hostname.t.o, $(LIB))
purecov_c_plus_target(my_hostname.t.pc, my_hostname.t.o, $(LIB))

template_inst( c++_util_instantiate.C, c++_util_instantiate.o )
html_target( documentation )

all-tests: access.t killfamily.t test_locks my_hostname.t

test: test.o user_log.o
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o test test.o user_log.o $(LIB)

tester: tester.o $(LIB)
	$(CC) $(CFLAGS) -Wl,-u._fpdata_size -o tester tester.o $(LIB)

foo: foo.o user_log.o
	$(CC) $(CFLAGS) -Wl,-u,_fpdata_size -o foo foo.o user_log.o $(LIB)

IMPORT_LINKS = ../../config/import_links
import(../condor_util_lib, mkargv.o)
import(../condor_daemon_client, $(DAEMON_CLIENT_OBJ))

release_library(libcondorapi.a,$(RELEASE_DIR)/lib)
strip_library(libcondorapi.a,$(STRIP_DIR)/lib)
static_library(libcondorapi.a,$(STATIC_DIR)/lib)

release_copy_target(user_log.README,include,user_log.README,TEXT_MODE)
strip_copy_target(user_log.README,include,user_log.README,TEXT_MODE)
static_copy_target(user_log.README,include,user_log.README,TEXT_MODE)

release_copy_target(user_log.c++.h,include,user_log.c++.h,TEXT_MODE)
strip_copy_target(user_log.c++.h,include,user_log.c++.h,TEXT_MODE)
static_copy_target(user_log.c++.h,include,user_log.c++.h,TEXT_MODE)

release_copy_target(condor_event.h,include,condor_event.h,TEXT_MODE)
strip_copy_target(condor_event.h,include,condor_event.h,TEXT_MODE)
static_copy_target(condor_event.h,include,condor_event.h,TEXT_MODE)

release_copy_target(../h/file_lock.h,include,file_lock.h,TEXT_MODE)
strip_copy_target(../h/file_lock.h,include,file_lock.h,TEXT_MODE)
static_copy_target(../h/file_lock.h,include,file_lock.h,TEXT_MODE)

release_copy_target(../condor_includes/condor_constants.h,\
                    include,condor_constants.h,TEXT_MODE)
strip_copy_target(../condor_includes/condor_constants.h, \
                  include,condor_constants.h,TEXT_MODE)
static_copy_target(../condor_includes/condor_constants.h, \
                   include,condor_constants.h,TEXT_MODE)

foo.o: user_log.h
test.o: user_log.h

condor_version.o: condor_version.C
	$(CPlusPlus) $(C_PLUS_FLAGS) -c -DPLATFORM=$(PLATFORM) condor_version.C

