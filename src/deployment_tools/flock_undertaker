#! /usr/bin/perl -w

##********************************************************************
## Determines whether another program has exited by checking the flock
## on the lock file.  Exits 0 if the process is dead.  1 otherwise.
##********************************************************************

#***
# Uses
#***
use strict;
use FindBin;
use lib ($FindBin::Bin, "$FindBin::Bin/lib", "$FindBin::Bin/../lib");
use FileLock;
use Getopt::Long;

#***
# Constant Static Variables
#***
my $USAGE = 
    "Usage: flock_undertaker [--file file][--block]\n";

#***
# Non-constant Static Variables
#***
my $lockfile = 'lock.file';
my $help = 0;
my $block = 0;

#***
# Main Function
#***

# Parse the command line options
GetOptions('file=s'=>\$lockfile,
	   'block'=>\$block,
	   'help'=>\$help,
	   );

# Process command line arguments
die $USAGE if( $help );

if( $block ){
    &Blocking();
} else{
    &NoBlocking();
}

#*********************************************************************
# Tests whether the lock is held in a non-blocking manner
# Exits 0 if the lock is not held
# Exits 1 if the lock is held
#*********************************************************************
sub NoBlocking{

    # See if the lock is held
    if( TestFLock($lockfile) ){
	# no, success
	exit 0;
    } else {
	# yes, failure
	exit 1;
    }

}

#*********************************************************************
# Blocks until the lock is released (using exponential backoff).
# Exits 0.
#*********************************************************************
sub Blocking{
    # Block until we acquire the lock
    my $lock_handle = AcquireFLock($lockfile, 'X');

    # Release the lock
    &ReleaseFLock($lock_handle);

    # exit
    exit 0;
}
