LIST_OF_SHAME
==============
1. Add getBootTime(...) to SysApi
   + if its not already there
   + ProcAPI gets the boottime all over the place, this code should be
     standardized into a method

2. Update ProcFamily to use new Procapi process id code
   + all of ProcFamily and ProcAPI need to be updated to use
     ProcessIds.  Updating just takesnapshot is not sufficient, the
     ProcAPI::getFamily methods must be updated as well to ensure the
     process represented by the pid returned by getFamily does not die
     and the pid reused before createProcessId is calles.

3. Update createProcessId(...) and isAlive(...) to handback
   procInfo, so the user gets and id and the info
   + reduces redundant calls to getProcInfo
   + requires a second function per-implementation of getProcInfo(...)
     - createProcInfo(ProcInfoRaw&).
       + creates a ProcInfo from a procRaw
     - skeleton for getProcInfo(...){
       // get proc raw info
       // call function to convert it to procInfo 
       }
     - skeleton for createProcessId(){
       // get procinfo raw
       // create process id
       // convert procinfo raw into piPTR
       // return procRaw and piPTR
     }

4. Add getSystemControlTime(...) to SysApi

5. Windows and AIX implementations of getProcInfo(...) scan the entire
   process space for the specifically queried process.  This could be
   made more effecient by get process info in a batch.

