SRC_DIR = $(SRC_TREE)/condor_util_lib
CFLAGS = $(STD_C_FLAGS) $(RONALD) -DNEW_PROC

#if IS_V5 || IS_V6
VFLAG = -DV5
#else
VFLAG = -DV4
#endif

CFLAGS = $(STD_C_FLAGS) $(RONALD) -DNEW_PROC $(VFLAG) 

#if IS_ALPHA_OSF1
VIRT_MEM_SRC = virt_mem.Alpha.c
VIRT_MEM_OBJ = virt_mem.Alpha.o
#elif IS_SUN4M_SOLARIS || IS_SUN4M_SOLARIS251 
VIRT_MEM_SRC = virt_mem.Solaris.c
VIRT_MEM_OBJ = virt_mem.Solaris.o
#elif IS_X86_SOLARIS || IS_X86_SOLARIS25
VIRT_MEM_SRC = virt_mem.Solaris.c
VIRT_MEM_OBJ = virt_mem.Solaris.o
#else
VIRT_MEM_SRC = virt_mem.c
VIRT_MEM_OBJ = virt_mem.o
#endif

#if MALLOC_DEBUG
MALLOC_SRC = malloc.c
MALLOC_OBJ = malloc.o
#endif

#if !HAS_FLOCK
FLOCK_SRC = flock.c
FLOCK_OBJ = flock.o
#endif

#if !HAS_SETREUID
SETREUID_SRC = setreuid.c
SETREUID_OBJ = setreuid.o
#endif

#if !HAS_SETEUID
SETEUID_SRC = seteuid.c
SETEUID_OBJ = seteuid.o
#endif

#if !HAS_SETREGID
SETREGID_SRC = setregid.c
SETREGID_OBJ = setregid.o
#endif

#if !HAS_SETRGID
SETRGID_SRC = setrgid.c
SETRGID_OBJ = setrgid.o
#endif

#if !HAS_SETEGID
SETEGID_SRC = setegid.c
SETEGID_OBJ = setegid.o
#endif

#if !HAS_GETDTABLESIZE
GETDTABLESIZE_SRC = getdtablesize.c
GETDTABLESIZE_OBJ = getdtablesize.o
#endif

#if !HAS_GETWD
GETWD_SRC = getwd.c
GETWD_OBJ = getwd.o
#endif

#if !HAS_GETPAGESIZE
GETPAGESIZE_SRC = getpagesize.c
GETPAGESIZE_OBJ = getpagesize.o
#endif

#if !HAS_SETLINEBUF
SETLINEBUF_SRC = setlinebuf.c
SETLINEBUF_OBJ = setlinebuf.o
#endif

#if !HAS_INSQUE
INSQUE_SRC = insque.c
INSQUE_OBJ = insque.o
#endif

#if NEEDS_FAKE_GETMNT
GETMNT_SRC = getmnt.c
GETMNT_OBJ = getmnt.o
#endif

#define SourceFiles \
	blankline.c config.c condor_config.c ctrace.c do_connect.c \
	dprintf.c dprintf_config.c except.c history.c job_queue.c \
	ltrunc.c mkargv.c proc.c signames.c strdup.c status.c \
	stricmp.c expr.c perror.c condor_errlst.c detach.c \
	update_rusage.c uids.c cronos.c machine_status.c phys_mem.c \
	free_fs_blocks.c $(FLOCK_SRC) $(SETREUID_SRC) $(GETDTABLESIZE_SRC) \
	$(SETRGID_SRC) $(SETREGID_SRC) $(SETEGID_SRC) $(SETEUID_SRC) \
	$(GETPAGESIZE_SRC) $(SETLINEBUF_SRC) $(GETWD_SRC) $(INSQUE_SRC) \
	$(MALLOC_SRC) disk_req.c env_param.c ckpt_name.c lock_file.NON_POSIX.c \
	block_condor.c my_popen.c $(GETMNT_SRC) syscall_numbers.c $(VIRT_MEM_SRC) \
	sig_install.c internet.c startup_info.c get_random_num.c \
	ckpt_server_api_stubs.c ckpt_util.c \
	stub_gen_lex.l \
	stub_gen_yacc.y \


#define ObjectFiles \
	blankline.o config.o do_connect.o dprintf.o dprintf_config.o except.o \
	history.o job_queue.o ltrunc.o mkargv.o proc.o signames.o \
	strdup.o stricmp.o expr.o perror.o condor_errlst.o condor_config.o \
	ctrace.o status.o detach.o update_rusage.o uids.o cronos.o \
	machine_status.o $(VIRT_MEM_OBJ) phys_mem.o free_fs_blocks.o $(FLOCK_OBJ) \
	$(SETREUID_OBJ) \
	$(GETDTABLESIZE_OBJ) $(SETRGID_OBJ) $(SETREGID_OBJ) $(MALLOC_OBJ)\
	$(SETEGID_OBJ) $(SETEUID_OBJ) $(GETPAGESIZE_OBJ) $(SETLINEBUF_OBJ) \
	$(GETWD_OBJ) $(INSQUE_OBJ) disk_req.o env_param.o ckpt_name.o \
	lock_file.NON_POSIX.o block_condor.o my_popen.o $(GETMNT_OBJ) \
	syscall_numbers.o sig_install.o internet.o startup_info.o \
	ckpt_server_api_stubs.o ckpt_util.o get_random_num.o

all_target( util_lib.a stub_gen )

test.o: test.c
	gcc $(CFLAGS) -c test.c

test: test.o util_lib.a
	gcc $(CFLAGS) -o test test.o util_lib.a

library_target(util_lib.a,ObjectFiles)
program_target(stub_gen,y.tab.o lex.yy.o,$(NULL))

lex.yy.c: stub_gen_lex.l scanner.h y.tab.h
	lex stub_gen_lex.l
clean::
	rm -f lex.yy.c

y.tab.c: stub_gen_yacc.y scanner.h
	YACC -d stub_gen_yacc.y
clean::
	rm -f y.tab.c y.tab.h

tags_target(SourceFiles,$(NULL))
depend_target(SourceFiles)

IMPORT_LINKS = ../../config/import_links
import(../h,syscall_numbers.c)

release:
