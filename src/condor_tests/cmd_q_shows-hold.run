#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;

$cmd      = 'cmd_q_shows-hold.cmd';
$testname = 'Condor_q shows jobs on hold - vanilla U';

# truly const variables in perl
sub IDLE{1};
sub HELD{5};
sub RUNNING{2};

my $alreadydone=0;

$abort = sub {
	print "Job is gone now, cool.\n";
};

$submit = sub
{
	my %args = @_;
	my $cluster = $args{"cluster"};
	my $header = 0;
	my $reason = 0;

	print "Good. Cluster $cluster is supposed to be held.....\n";
	print "Releasing cluster $cluster\n";
	my @adarray;
	my $status = 1;
	my $cmd = "condor_q -hold $cluster";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}
	foreach my $line (@adarray)
	{
		print "$line\n";
		if( $line =~ /.*HOLD_REASON.*/ )
		{
			print "Got HOLD_REASON header line.......\n";
			$header = 1;
		}
		if( $line =~ /.*submitted on hold.*/ )
		{
			print "Yup reason is submitted on hold.......\n";
			$reason = 1;
		}
	}

	if( $reason == 1 & $header == 1 )
	{
		print "Good. Cluster $cluster needs to be released.....\n";
		print "Releasing cluster $cluster\n";
		my @adarray;
		my $status = 1;
		my $cmd = "condor_release $cluster";
		$status = CondorTest::runCondorTool($cmd,\@adarray,2);
		if(!$status)
		{
			print "Test failure due to Condor Tool Failure<$cmd>\n";
			exit(1)
		}
	}
	else
	{
		print "Test failed because HOLD header and expected reason were not found\n";
		exit(1);
	}

};

$release = sub
{
	my %args = @_;
	my $cluster = $args{"cluster"};

	print "Good hold and release both worked! removing job\n";
	my @adarray;
	my $status = 1;
	my $cmd = "condor_rm $cluster";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}
};

$success = sub
{
	die "Hold/Release/Remove/Abort is expected event trail!\n";
};

CondorTest::RegisterSubmit($testname, $submit);
CondorTest::RegisterAbort($testname, $abort);
CondorTest::RegisterRelease($testname, $release);
CondorTest::RegisterExitedSuccess($testname, $success);

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	print "$testname: SUCCESS\n";
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

