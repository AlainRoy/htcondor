#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorPersonal;

CondorPersonal::DebugOff();
Condor::DebugOff();

$param_template = "x_param.protocol-negot.template";
$testname = 'lib_auth_protocol-negot-prt2 - Security Protocol Negotiation Test';
$corename = "lib_auth_protocol-negot-prt2";
$mytestnegotiation = "x_secneg_clR_dmnR_secprepostsrc";
$mytestnegotiation_result = "yes";
$mytestnegotiation_pat = "secprepostsrc";
$mybaseparamname = "x_param.protocol-negot-prt2";
$datafile = "lib_auth_protocol-negot-prt2.data";


my $numberoftests = 4;
my $numberoferrors = 0;

# where am I running
$currenthost = CondorTest::getFqdnHost();
CondorTest::fullchomp($currenthost);

system("date");
$myvariation = 1;

$pid = $mypid = CondorPersonal::SaveMeSetup($corename);
$mysaveme = $corename . ".saveme";

if($mypid == 0) {
	die "Saveme setup for test failed\n";
}

open(DF,"<$datafile") || die "Can not open negotiation data file!: $!\n";
my $line;
while(<DF>) {
	CondorTest::fullchomp($_);
	#$mypid = $myvariation . "_" . $pid;
	$mypid = $pid;
	$label = "protocol" . "_" . $myvariation;
	#if($myvariation == 2) {
		#exit(0);
	#}
	$myvariation = $myvariation + 1;
	print "Condor for this run in $mypid\n";
	system("date");
	$line = $_;
	if($line =~ /^(x_secneg.*_secprepostsrc)\s(.*)$/ ) {
		print "Negotiation is $1 and Expected result $2\n";
		$mytestnegotiation = $1;
		$mytestnegotiation_result = $2;
	}

	#print "$line\n";
	$myparamname = $mybaseparamname . $mypid;
	$mysubmitnm = $corename . $mypid . ".cmd";
	$mysubmitnmout = $corename . $mypid . ".cmd.out";
	$mysubmitnmlog = $corename . $mypid . ".log";
	$mysubmitnmout = $corename . $mypid . ".log";
	$mycorenm = $corename . ".cmd";
	$mycorenmout = $corename . ".cmd.out";
	$mycorenmlog = $corename . ".log";

	print "Master PID is $mypid\n";
	print "Master PID submit file is $mysubmitnm\n";

	# Edit submit file to submit to scheduler at securitypool (side b) schedd.
	my $line;
	open(CSUB,">$myparamname") || die "Can't open new submit file $myparamname: $!\n";
	open(TPLATE,"<$param_template") || die "Can't open param template $param_template: $!\n";
	while(<TPLATE>)
	{
		CondorTest::fullchomp($_);
		$line = $_;
		if( $line =~ /^\s*secprepostsrc\s*=\s*.*$/ )
		{
			print "Setting up for $mytestnegotiation\n";
			print CSUB "secprepostsrc = $mytestnegotiation\n";
		}
		else
		{
			#print "template: $line\n";
			print CSUB "$line\n";
		}
	}
	close(TPLATE);
	close(CSUB);
	my $configsec = CondorPersonal::StartCondor($myparamname ,$label, $mypid);
	my @securitypool = split /\+/, $configsec;
	my $secconfig = shift @securitypool;
	my $secport = shift @securitypool;

	print "---security config is $secconfig and securitypool port is $secport---\n";
	

	$ENV{CONDOR_CONFIG} = $secconfig;
	# submit into local schedd (side a)

	my $result = system("./lib_auth_protocol-negot-prt2.pl $mypid $label $mytestnegotiation_result");
	print "Result of crafted lib_auth_protocol-negot job is  $result\n";

	if($result != 0) {
		$mynumberoferrors = $mynumberoferrors + 1;
		print "ERRORS detected: $mynumberoferrors of $mynumberoftests failed\n";
	}

	system("cp *$corename* $mysaveme");
	
	if( -e "$mysubmitnm" )
	{
		system("cp $mysubmitnm $mycorenm");
	}

	if( -e "$mysubmitnmout" )
	{
		system("cp $mysubmitnmout $mycorenmout");
	}

	if( -e "$mysubmitnmlog" )
	{
		system("cp $mysubmitnmlog $mycorenmlog");
	}

	my @adarray;
	my $status = 1;
	my $cmd = "condor_off -fast -master";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}

	if(!$status)
	{
		print "Test failure due to Condor Tool Failure<$cmd>\n";
		exit(1)
	}
}

system("date");

if( $mynumberoferrors != 0 )
{
	# actual test failed but we allowed cleanup
	print "$mynumberoferrors of $numberoftests FAILED!\n";
	exit(1);
}

exit(0);
