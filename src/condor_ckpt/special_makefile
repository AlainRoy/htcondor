ifeq ($(USER), gbronner) 
CONDOR_LIB_DIR=/local.sleepy.1/gbronner/build/src/release_dir/lib
else
CONDOR_LIB_DIR=/local.vulture.3/johnbent/src/release_dir/lib
endif

CONDOR_COMPILE= condor_compile
CC=g++

CC=/s/ogcc/bin/g++
PURIFY = purify -collector=/s/ogcc/bin/ld -g++

CCFLAGS=-g
MAKE= make
LIBDIRS=-L/s/zlib/lib 
LDFLAGS=-Xlinker -dn
INCLUDEDIRS=-I/s/zlib/include

# The point of this is
# First make all of the crap (mostly .o files)
# then make my driver program .o file
# then make the library against which my program will link
# this library has to use the new
# .o files in this directory (talk about horrible build systems....)
# make release moves all of the crap to the lib dir
# finally run the whole damn thing through condor compile. 
# This produces a rather plump executable.

all: compare 
compare-sun:
	make clean;
	make compare;
	mv compare compare-sun

tester: compare_tester.C
	condor_compile g++ $< -o $@
	@echo ""
	@echo "Now run $@ to make the ckpts."

compare: secondattempt.o
	$(CC) $(CCFLAGS) $(LIBDIRS) $(LDFLAGS) $< -lz -o $@ 
	chmod 0777 $@

pure: secondattempt.o
	$(PURIFY) $(CC) $(LIBDIRS) $(LDFLAGS) $< -lz -o $@
secondattempt.o: secondattempt.C secondattempt.h
	$(CC) $(CCFLAGS) $(INCLUDEDIRS) -c secondattempt.C 
clean:
	rm -f secondattempt*.o compare pure tester tester.ckpt ckpt.*
