SRC_DIR = $(SRC_TREE)/classad

/* select required features */

#define COLLECTIONS

LOCAL_FLAGS = \
	-DWANT_CLASSAD_NAMESPACE -DDISABLE_DLOPEN_CHECK
C_PLUS_FLAGS 	= -Wall -I/usr/include $(STD_C_PLUS_FLAGS) $(LOCAL_FLAGS)
CFLAGS 		= -Wall -I/usr/include $(STD_C_FLAGS) $(LOCAL_FLAGS)


/* Are collections required? */
SRC = \
	collectionServer.cpp \
	collectionClient.cpp \
	remoteQuery.cpp
OBJ = \
	collectionServer.o \
	collectionClient.o \
	remoteQuery.o


LIB_BASE =  $(NEW_CLASSADS_DIR)/libclassad_ns.a ../condor_c++_util/cplus_lib.a \
      ../condor_util_lib/util_lib.a \
      ../condor_c++_util/cplus_lib.a ../condor_util_lib/util_lib.a \
      ../condor_util_lib/util_lib.a ../condor_sysapi/libsysapi.a \
      $(STLPORT_LIB)

LIB = $(LIB_BASE) $(IO_LIB) $(SECURITY_LIB) $(CPLUS_LIB) $(SECURITY_LIB)

/* the main condor library target */
all_target(libclassad_support.a)
library_target(libclassad_support.a,$(OBJ))

release:: all

testbin:: all

/* template instantiations go in here */

/* Rule to make documentation */
doc: html

#ifdef ENABLE_SHARED_LIBRARY_FUNCTIONS
shared:
	g++ -fPIC -shared -o libshared.so shared.cpp
#endif

/* Also depends on several header files, but I am ignoring that for now */
html_target( documentation )

clean::
	rm -f -r *.o *.gz html

/* The Classad eXpression Interpreter */
#ifdef ENABLE_SHARED_LIBRARY_FUNCTIONS
LDFLAGS =  -Xlinker --export-dynamic -ldl
#endif

c_plus_target (cxi, cxi.o, $(LIB))
c_plus_target (test_classads, test_classads.o, $(LIB))
c_plus_target (classad_functional_tester, classad_functional_tester.o, $(LIB))
c_plus_target (classad_unit_tester, classad_unit_tester.o, $(LIB))
c_plus_target (classad_version, classad_version.o, $(LIB))
c_plus_target (test_xml, test_xml.o, $(LIB))
c_plus_target (extra_tests, extra_tests.o, $(LIB))
c_plus_target (sample, sample.o, $(LIB))
c_plus_target (man_cache_test, man_cache_test.o, $(LIB))

