# Makefile generated by imake - do not edit!
# $Xorg: imake.c,v 1.6 2001/02/09 02:03:15 xorgcvs Exp $

#
# Copyright 1986, 1987, 1988, 1989, 1990, 1991 by the Condor Design Team
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted,
# provided that the above copyright notice appear in all copies and that
# both that copyright notice and this permission notice appear in
# supporting documentation, and that the names of the University of
# Wisconsin and the Condor Design Team not be used in advertising or
# publicity pertaining to distribution of the software without specific,
# written prior permission. The University of Wisconsin and the Condor
# Design Team make no representations about the suitability of this
# software for any purpose. It is provided "as is" without express
# or implied warranty.
#
# THE UNIVERSITY OF WISCONSIN AND THE CONDOR DESIGN TEAM DISCLAIM ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE UNIVERSITY OF
# WISCONSIN OR THE CONDOR DESIGN TEAM BE LIABLE FOR ANY SPECIAL, INDIRECT
# OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
# OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
# OR PERFORMANCE OF THIS SOFTWARE.
#

SYSNAME = i386_rh_unknown

C_COMP_KIND = -DC_COMP_KIND_GCC
C_COMP_MAJOR = -DC_COMP_MAJOR_GCC_3
C_COMP_MINOR = -DC_COMP_MINOR_GCC_3_2
C_COMP_PATCH = -DC_COMP_PATCH_GCC_3_2_3
CCOMPILER_ID = $(C_COMP_KIND) $(C_COMP_MAJOR) $(C_COMP_MINOR) $(C_COMP_PATCH)

LIB_STDCPP = /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/libstdc++.a

LIB_GCC_EH = /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/libgcc_eh.a

GCC_LIBC = /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/libgcc.a
CRT_BEGIN = /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/../../../crt1.o
GCC_STATIC_LD_FLAG = -Wl,-Bstatic
GCC_STATIC_LIBS = $(GCC_STATIC_LD_FLAG) -lstdc++ -lgcc

HEADER_FEATURE_SET =

 HEADER_FEATURE_SYS_TYPES_H = -DHAS_SYS_TYPES_H

HEADER_FEATURE_SET += $(HEADER_FEATURE_SYS_TYPES_H)

 HEADER_FEATURE_STDINT_H = -DHAS_STDINT_H

HEADER_FEATURE_SET += $(HEADER_FEATURE_STDINT_H)

 HEADER_FEATURE_INTTYPES_H = -DHAS_INTTYPES_H

HEADER_FEATURE_SET += $(HEADER_FEATURE_INTTYPES_H)

CTYPE_FEATURE_SET =

 CTYPE_FEATURE_INT64_T = -DHAS_INT64_T

CTYPE_FEATURE_SET += $(CTYPE_FEATURE_INT64_T)

 CTYPE_FEATURE_LONGLONG = -DHAS_LONGLONG

CTYPE_FEATURE_SET += $(CTYPE_FEATURE_LONGLONG)

 CTYPE_FEATURE___INT64 =

CTYPE_FEATURE_SET += $(CTYPE_FEATURE___INT64)

 FUNC_FEATURE_STAT64 = -DHAS_STAT64

FUNC_FEATURE_SET = $(FUNC_FEATURE_STAT64)

GNU_G77 = /p/condor/workspaces/build/bin/g77

VENDOR_F77 =

VENDOR_F90 =

VENDOR_CC =

VENDOR_CPLUS =
VENDOR_CPLUS_NAME =

LEX = flex
LEXLIB = -lfl
YACC = byacc
STRIP = /p/condor/workspaces/build/bin/strip

TAR_CMD = tar --owner=0 --group=0

CP_CMD = /bin/cp -rL

TMP_DIR = /tmp

PURE_CACHE_DIR = /tmp/akini/.pcache

CONDOR_ANALYZE_RELEASE =
CONDOR_ANALYZE_STATIC =
CONDOR_ANALYZE_STRIP =

GlobusFlavor = gcc32dbg

#
# This Makefile is generated specifically for I386-LINUX_RH_UNKNOWN machines.
#

EXT_ROOT = /p/condor/workspaces/externals
EXT_TRIGGER = $(EXT_ROOT)/triggers
EXT_INSTALL = $(EXT_ROOT)/install
EXT_CONFIG_SH = /scratch/akini/condor_workspace/v6_7_db_logs_nonblocking/config/config.sh

EXT_KERBEROS_VERSION = krb5-1.2.7
EXT_GLOBUS_VERSION = globus-2.4.3.vdt.1.1.14
EXT_GPT_VERSION = gpt-3.0
EXT_GAHP_VERSION = gahp-1.0.12
EXT_ZLIB_VERSION = zlib-1.1.3
EXT_PVM_VERSION = pvm-3.4.2
EXT_MAN_VERSION = man-current
EXT_GT3GAHP_VERSION = gt3gahp-2.0

EXT_GLIBC_VERSION = glibc-2.3.2.27.9.7
GLIBC_DIR = $(EXT_INSTALL)/$(EXT_GLIBC_VERSION)/lib

MAN_DIR = $(EXT_INSTALL)/$(EXT_MAN_VERSION)/man
OPENSSL_DIR = $(EXT_INSTALL)/$(EXT_GLOBUS_VERSION)
GLOBUS_DIR = $(EXT_INSTALL)/$(EXT_GLOBUS_VERSION)
GAHP_DIR = $(EXT_INSTALL)/$(EXT_GAHP_VERSION)/bin
KERBEROS_DIR = $(EXT_INSTALL)/$(EXT_KERBEROS_VERSION)
PVM_DIR = $(EXT_INSTALL)/$(EXT_PVM_VERSION)

KERBEROS_INC = $(KERBEROS_DIR)/include

KERBEROS_LIB = $(KERBEROS_DIR)/lib/libkrb5.a $(KERBEROS_DIR)/lib/libk5crypto.a $(KERBEROS_DIR)/lib/libcom_err.a

ZLIB_DIR = $(EXT_INSTALL)/$(EXT_ZLIB_VERSION)
ZLIB_LIB = $(ZLIB_DIR)/lib
ZLIB_INC = $(ZLIB_DIR)/include

PVM_DIR = $(EXT_INSTALL)/$(EXT_PVM_VERSION)

GT3GAHP_DIR = $(EXT_INSTALL)/$(EXT_GT3GAHP_VERSION)

LIBC = $(GLIBC_DIR)/libc.a
SIMPLE_LIBC = $(GLIBC_DIR)/libc.a

TOP = /full/path/to/your/source/workspace
PLATFORM = I386-LINUX_RH_UNKNOWN

PLATFORM_DIR = $(TOP)/$(PLATFORM)
RELEASE_DIR = ../release_dir
STRIP_DIR = ../strip_dir
STRIP_CONTRIB = ../strip_contrib
STATIC_DIR = ../static_dir
STATIC_CONTRIB = ../static_contrib
PURE_DIR = pure_bin

LIB_DIR = $(RELEASE_DIR)/lib
CONFIG_DIR = $(TOP)/config
SRC_TREE = $(TOP)/src
DOC_TREE = $(TOP)/doc
INCLUDE_DIR = ../h
NEW_INCLUDE_DIR = ../condor_includes
C_PLUS_INCLUDE = ../condor_c++_util
DAEMONCLIENT_INCLUDE = ../condor_daemon_client
ODBC_INCLUDE = /p/condordb/public/odbc/include
ODBC_LIB_DIR = /p/condordb/public/odbc/lib
ODBC_LIB = /p/condordb/public/odbc/lib/libodbc.a

SNPRINTF_FLAGS =

MakeRPMs = perl condor_scripts/make_public_rpms

ifdef DEBUG_BUILD
CC = $(DEBUG_BUILD) gcc
CPlusPlus = $(DEBUG_BUILD) g++
C_LINK = $(DEBUG_BUILD) gcc
CC_LINK = $(DEBUG_BUILD) g++
else
CC = gcc
CPlusPlus = g++
C_LINK = gcc
CC_LINK = g++
endif

JAVAC = javac
JAR = jar

STATIC = -static
STAR = *

PLATFORM_LDFLAGS = -lresolv -ldl
PURIFY_PLATFORM_LDFLAGS =
TEST_PLATFORM_LDFLAGS =

ifdef SMP_NUM_JOBS
SMP_FLAGS = -j $(SMP_NUM_JOBS)
else
SMP_FLAGS =
endif

OS_FLAG = LINUX
ARCH_FLAG = I386

DEBUG_FLAG = -g -Wall

  CONDOR_G_FLAGS = -DCONDOR_G

  GSI_AUTH_FLAGS = -DGSI_AUTHENTICATION
  GSI_AUTH_LIB =

  KERBEROS_FLAG = -DKERBEROS_AUTHENTICATION -I$(KERBEROS_INC)

  3DES_FLAGS = -DCONDOR_3DES_ENCRYPTION

  BLOWFISH_FLAGS = -DCONDOR_BLOWFISH_ENCRYPTION

  ENCRYPTION_FLAGS = -DCONDOR_ENCRYPTION $(3DES_FLAGS) $(BLOWFISH_FLAGS)
  ENCRYPTION_LIB =

  MD_FLAGS = -DCONDOR_MD
  MD_LIB =

  PRE_GLOBUS_LIBS =
  POST_GLOBUS_LIBS =

  GSI_FLAGS = -DCONDOR_GSI $(GSI_AUTH_FLAGS)
  GSI_LIB = $(PRE_GLOBUS_LIBS) $(GLOBUS_DIR)/lib/libglobus_gss_assist_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gsi_cert_utils_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gsi_credential_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gsi_proxy_core_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_proxy_ssl_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gsi_callback_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gssapi_gsi_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libssl_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_gsi_sysconfig_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_openssl_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_openssl_error_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_oldgaa_$(GlobusFlavor).a $(GLOBUS_DIR)/lib/libglobus_common_$(GlobusFlavor).a $(POST_GLOBUS_LIBS)

    OPENSSL_FLAGS = -I$(OPENSSL_DIR)/include/$(GlobusFlavor)
    OPENSSL_LIB = $(PRE_GLOBUS_LIBS) $(OPENSSL_DIR)/lib/libssl_$(GlobusFlavor).a $(OPENSSL_DIR)/lib/libcrypto_$(GlobusFlavor).a $(POST_GLOBUS_LIBS)

    OPENSSL_MD_LIB = $(OPENSSL_DIR)/lib/libcrypto_$(GlobusFlavor).a

SECURITY_FLAGS = $(GSI_FLAGS) $(KERBEROS_FLAG) $(ENCRYPTION_FLAGS) $(MD_FLAGS) $(GSI_FLAGS) $(OPENSSL_FLAGS)

SECURITY_LIB = $(GSI_LIB) $(KERBEROS_LIB) $(ENCRYPTION_LIB) $(MD_LIB) $(GSI_LIB) $(OPENSSL_LIB)

NETMAN_LIB =
NETMAN_FLAGS =

VENDOR_C_FLAGS = -I$(INCLUDE_DIR) -I$(NEW_INCLUDE_DIR) -I$(C_PLUS_INCLUDE) -D$(ARCH_FLAG)=$(ARCH_FLAG) -D$(OS_FLAG)=$(OS_FLAG) $(SITE_C_FLAGS) $(CONDOR_G_FLAGS) $(SECURITY_FLAGS) $(NETMAN_FLAGS) $(SNPRINTF_FLAGS) -I$(DAEMONCLIENT_INCLUDE)

GPP_VERS_FLAGS = -Wno-deprecated

GPP_SHARED_FLAGS = -fno-implicit-templates $(GPP_VERS_FLAGS)

STD_C_FLAGS = $(VENDOR_C_FLAGS) $(DEBUG_FLAG) $(CC_PIC_FLAG) -mcpu=i486 -DGLIBC=GLIBC -DGLIBC23=GLIBC23 $(CCOMPILER_ID) $(HEADER_FEATURE_SET) $(FUNC_FEATURE_SET) $(CTYPE_FEATURE_SET) $(AUTOCONF_DEFS)
STD_C_PLUS_FLAGS = $(STD_C_FLAGS) $(GPP_SHARED_FLAGS) -I$(ODBC_INCLUDE)

INST_C_PLUS_FLAGS = $(STD_C_FLAGS) $(GPP_VERS_FLAGS)

TESTSUITE_FLAGS_GCC = $(STD_C_FLAGS)
TESTSUITE_FLAGS_GPP = $(STD_C_PLUS_FLAGS)
TESTSUITE_FLAGS_G77 = $(STD_C_FLAGS)
TESTSUITE_FLAGS_CC = -g $(VENDOR_C_FLAGS) -mcpu=i486 -DGLIBC=GLIBC -DGLIBC23=GLIBC23
TESTSUITE_FLAGS_CPP = -g $(VENDOR_C_FLAGS) -mcpu=i486 -DGLIBC=GLIBC -DGLIBC23=GLIBC23
TESTSUITE_FLAGS_F77 = -g $(VENDOR_C_FLAGS) -mcpu=i486 -DGLIBC=GLIBC -DGLIBC23=GLIBC23

CKPT_SERV_LIB = ../condor_ckpt_server/ckpt_server_api.a
QMGMT_LIB = ../condor_schedd.V6/libqmgmt.a
CLASSAD_LIB = ../condor_classad/libclassad.a
IO_LIB = ../condor_io/libcedar.a
CUTIL_LIB = ../condor_util_lib/util_lib.a
CPLUS_LIB = ../condor_c++_util/cplus_lib.a
PROCAPI_LIB = ../condor_procapi/libprocapi.a
SYSAPI_LIB = ../condor_sysapi/libsysapi.a
ACCT_LIB = ../condor_accountant.V6/libacct.a
DAEMONCORE_LIB = ../condor_daemon_core.V6/daemon_core.a

ALL_LDFLAGS = -lm -L$(ODBC_LIB_DIR) -ldl $(LDFLAGS) $(PLATFORM_LDFLAGS) $(SITE_LDFLAGS)
TEST_LDFLAGS = -lm $(LDFLAGS) $(TEST_PLATFORM_LDFLAGS) $(SITE_LDFLAGS)
PURIFY_LDFLAGS = -lm $(LDFLAGS) $(PURIFY_PLATFORM_LDFLAGS) $(SITE_LDFLAGS)

STD_LIBS = $(CUTIL_LIB) $(CPLUS_LIB) $(CKPT_SERV_LIB) $(QMGMT_LIB) $(ACCT_LIB) $(PROCAPI_LIB) $(SYSAPI_LIB) $(CPLUS_LIB) $(CLASSAD_LIB) $(IO_LIB) $(CPLUS_LIB) $(CUTIL_LIB) $(SYSAPI_LIB) $(CPLUS_LIB) $(CUTIL_LIB) $(SYSAPI_LIB) $(CLASSAD_LIB) $(IO_LIB) $(CPLUS_LIB) $(IO_LIB) $(CPLUS_LIB) $(CUTIL_LIB) $(SECURITY_LIB) $(ODBC_LIB)

.SUFFIXES: .C

.C.o:
	       $(CPlusPlus) $(C_PLUS_FLAGS) -c $<

.f.o:
	       $(Fortran) $(FFLAGS) -c $<

DEMANGLE = 2>&1 | c++filt

CONDOR_COMPILE = ../../condor_scripts/condor_compile
CONDOR_ARCH_LINK = perl ../../condor_scripts/condor_arch_link

NAME = condor_tt

# Begin translation of [FUNC_all_target:3]
all:: $(NAME)
# End translation of [FUNC_all_target:3]

CFLAGS = $(STD_C_FLAGS)
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS)
LDFLAGS = $(STD_LDFLAGS)
LIB = $(DAEMONCORE_LIB) $(STD_LIBS)

OBJ = tt_main.o ttmanager.o

# Begin translation of [FUNC_c_plus_target:13]
$(NAME): $(OBJ)
	$(CC_LINK) $(C_PLUS_FLAGS) -o $(NAME) $(OBJ) $(LIB) $(ALL_LDFLAGS) $(DEMANGLE)
clean::
	rm -f $(NAME) $(OBJ)
# End translation of [FUNC_c_plus_target:13]

# Begin translation of [FUNC_release_target:15]
$(RELEASE_DIR)/sbin/$(NAME): $(NAME)
	/bin/rm -f $(RELEASE_DIR)/sbin/$(NAME)
	cp $(NAME) $(RELEASE_DIR)/sbin
	chmod 0755 $(RELEASE_DIR)/sbin/$(NAME)
release:: $(RELEASE_DIR)/sbin/$(NAME)
# End translation of [FUNC_release_target:15]

# html:
# release:: all
# stripped:: all
# static:: all
# clean::

ALWAYS:

r: release

