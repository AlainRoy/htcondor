--- EC2.pm	Sun Apr  1 06:19:18 2007
+++ /u/j/y/jyoon/condor/condor_ec2/ec2_lib/Net/Amazon/EC2.pm	Fri Feb 15 00:17:26 2008
@@ -99,7 +99,8 @@ sub _init {
 	my $ts = time2isoz();
 
 	$self->{signature_version} = 1;
-	$self->{version} = '2007-01-19';
+	#$self->{version} = '2007-01-19';
+	$self->{version} = '2007-08-29';
 	$self->{base_url} = 'http://ec2.amazonaws.com';
 	$self->{AWSAccessKeyId} = $args{AWSAccessKeyId};
 	$self->{SecretAccessKey} = $args{SecretAccessKey};
@@ -209,6 +210,7 @@ sub register_image {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -295,6 +297,7 @@ sub describe_images {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 		
 		return undef;
 	}
@@ -331,6 +334,7 @@ sub deregister_image {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -429,6 +433,7 @@ sub run_instances {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -506,6 +511,7 @@ sub describe_instances {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -583,6 +589,7 @@ sub terminate_instances {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -640,6 +647,7 @@ sub create_key_pair {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -694,6 +702,7 @@ sub describe_key_pairs {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -733,6 +742,7 @@ sub delete_key_pair {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -795,6 +805,7 @@ sub modify_image_attribute {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -835,6 +846,7 @@ sub reset_image_attribute {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -876,6 +888,7 @@ sub create_security_group {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -947,6 +960,7 @@ sub describe_security_groups {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -983,6 +997,7 @@ sub delete_security_group {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1059,6 +1074,7 @@ sub authorize_security_group_ingress {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1135,6 +1151,7 @@ sub revoke_security_group_ingress {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1171,6 +1188,7 @@ sub get_console_output {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1216,6 +1234,7 @@ sub reboot_instances {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1266,6 +1285,7 @@ sub describe_image_attribute {
 	if ( grep { defined && length } $xml->{Errors} ) {
 		$self->_debug("ERROR: $xml->{Errors}{Error}{Message}");
 		$self->{error} = $xml->{Errors}{Error}{Message};
+		$self->{errorcode} = $xml->{Errors}{Error}{Code};
 
 		return undef;
 	}
@@ -1306,4 +1326,4 @@ under the same terms as Perl itself.
 
 =head1 SEE ALSO
 
-Amazon EC2 API: L<http://docs.amazonwebservices.com/AmazonEC2/dg/2007-01-19/>
\ No newline at end of file
+Amazon EC2 API: L<http://docs.amazonwebservices.com/AmazonEC2/dg/2007-01-19/>
