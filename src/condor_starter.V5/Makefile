# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $

#
#  Copyright 1986, 1987, 1988, 1989, 1990, 1991 by the Condor Design Team
#
#  Permission to use, copy, modify, and distribute this software and its
#  documentation for any purpose and without fee is hereby granted,
#  provided that the above copyright notice appear in all copies and that
#  both that copyright notice and this permission notice appear in
#  supporting documentation, and that the names of the University of
#  Wisconsin and the Condor Design Team not be used in advertising or
#  publicity pertaining to distribution of the software without specific,
#  written prior permission.  The University of Wisconsin and the Condor
#  Design Team make no representations about the suitability of this
#  software for any purpose.  It is provided "as is" without express
#  or implied warranty.
#
#  THE UNIVERSITY OF WISCONSIN AND THE CONDOR DESIGN TEAM DISCLAIM ALL
#  WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE UNIVERSITY OF
#  WISCONSIN OR THE CONDOR DESIGN TEAM BE LIABLE FOR ANY SPECIAL, INDIRECT
#  OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS
#  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
#  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE
#  OR PERFORMANCE OF THIS SOFTWARE.
#

#
#  This Makefile is generated specifically for ALPHA_OSF1  machines.
#

TILDE = /usr/home/condor
LIBC = /lib/libc.a
SIMPLE_LIBC = /lib/libc.a
CRT0 = /usr/lib/cmplrs/cc/crt0.o
SYSCALLS_EXP =

TOP = 				$(TILDE)/CONDOR
INSTALL_DIR = 			/usr/uw/condor
TMP_DIR = 			/tmp

PLATFORM_DIR =		$(TOP)/ALPHA_OSF1

RELEASE_DIR =		../release_dir

LIB_DIR =			$(RELEASE_DIR)/lib
CONFIG_DIR = 		$(TOP)/config
SRC_TREE =			$(TOP)/src
DOC_TREE =			$(TOP)/doc
INCLUDE_DIR =		../h
NEW_INCLUDE_DIR =	../condor_includes
C_PLUS_INCLUDE =	../condor_c++_util
PS_DIR =			$(DOC_TREE)/POSTSCRIPT
CAT_DIR = 			$(DOC_TREE)/CAT
PLATFORM =			ALPHA_OSF1

LIBX = DONT_KNOW
LIBXEXT = DONT_KNOW
CC = cc
CPlusPlus = cxx
STATIC	= -static
MKDEPEND = ../../GENERIC/mdepend.sh
STAR	= *

SYSCALL_LIB = syscall_lib_ultrix

LIBDBM =

OS_FLAG = OSF1
ARCH_FLAG = ALPHA

STD_C_PLUS_FLAGS =  				  -I$(INCLUDE_DIR) -I$(NEW_INCLUDE_DIR) -I$(C_PLUS_INCLUDE)   -D$(ARCH_FLAG) -D$(OS_FLAG) -DNFSFIX -DNDBM  -DVOID_SIGNAL_RETURN    -g

STD_C_FLAGS =  $(STD_C_PLUS_FLAGS)
STATIC = -static

.SUFFIXES: .C

.C.o:
	$(CPlusPlus) $(C_PLUS_FLAGS) -c $<

DEMANGLE = 2>&1 | demangle

SRC_DIR = $(SRC_TREE)/condor_starter

PVM_INCLUDE = -I../condor_pvmd/include
PVM_SRC = pvm_user_proc.C
PVM_OBJ = pvm_user_proc.o
PVM_FLAG = -DLINK_PVM
PVM_LIB = ../condor_pvmd/src/libpvm3.a

CKPT_FLAG = -DNO_CKPT

CFLAGS = $(STD_C_FLAGS) $(CKPT_FLAG) -DNEW_PROC
C_PLUS_FLAGS = $(STD_C_PLUS_FLAGS) $(CKPT_FLAG) -DNEW_PROC $(PVM_INCLUDE)	$(PVM_FLAG) $(STATIC)

LDFLAGS = -lmld

OS = OSF1

CLASS_LIB_SRC = alarm.C
CLASS_LIB_OBJ = alarm.o

PORTABLE_SRC = $(CLASS_LIB_SRC) signals.C starter.C 	user_proc.C environ.C starter.toy.C tables.C $(PVM_SRC)

PORTABLE_OBJ = $(CLASS_LIB_OBJ) signals.o starter.o 	user_proc.o environ.o tables.o $(PVM_OBJ)

NON_PORTABLE_SRC = NON_POSIX.C resource_limits.$(OS).C analyze_exec.$(OS).C 	analyze_core.$(OS).C

NON_PORTABLE_OBJ = NON_POSIX.o resource_limits.$(OS).o analyze_exec.$(OS).o 	analyze_core.$(OS).o

SRC = $(PORTABLE_SRC) $(NON_PORTABLE_SRC)
OBJ = $(PORTABLE_OBJ) $(NON_PORTABLE_OBJ)

XDR_LIB = ../condor_xdr_lib/xdr_lib.a
UTIL_LIB = ../condor_util_lib/util_lib.a
CLASS_LIB = ../condor_c++_util/cplus_lib.a

REMOTE_SYSCALL_LIB = ../condor_ckpt/libcondor.a $(UTIL_LIB) $(XDR_LIB) $(CLASS_LIB) $(PVM_LIB)

LIB = $(REMOTE_SYSCALL_LIB)

LIBDIRS = ../condor_util_lib ../condor_xdr_lib

TOY_SRC = state_machine_driver.C signals.C name_tab.C starter.toy.C 	alarm.C

TOY_OBJ = state_machine_driver.o signals.o name_tab.o starter.toy.o 	alarm.o

TOY_LIB =  $(UTIL_LIB) $(XDR_LIB)

all:  condor_starter test_it hound
release:: all

tags: ALWAYS
	condor_ctags  $(SRC)  -l  $(LIBDIRS)
clean::
	rm -f tags

depend: ALWAYS
	$(MKDEPEND) $(CFLAGS)  $(SRC)

test_it :  test_it.o   $(NULL)
	$(CPlusPlus) $(C_PLUS_FLAGS) -o  test_it   test_it.o   $(NULL)  $(LDFLAGS) $(DEMANGLE)
clean::
	rm -f  test_it   test_it.o
no_release ::
	/bin/rm -f $(RELEASE_DIR)/bin/test_it
	cp  test_it  $(RELEASE_DIR)/bin

hound :  hound.o   $(NULL)
	$(CPlusPlus) $(C_PLUS_FLAGS) -o  hound   hound.o   $(NULL)  $(LDFLAGS) $(DEMANGLE)
clean::
	rm -f  hound   hound.o
no_release ::
	/bin/rm -f $(RELEASE_DIR)/bin/hound
	cp  hound  $(RELEASE_DIR)/bin

condor_starter :  $(OBJ)   $(LIB)
	$(CPlusPlus) $(C_PLUS_FLAGS) -o  condor_starter   $(OBJ)   $(LIB)  $(LDFLAGS) $(DEMANGLE)
clean::
	rm -f  condor_starter   $(OBJ)
release ::
	/bin/rm -f $(RELEASE_DIR)/bin/condor_starter
	cp  condor_starter  $(RELEASE_DIR)/bin

toy :  $(TOY_OBJ)   $(TOY_LIB)
	$(CPlusPlus) $(C_PLUS_FLAGS) -o  toy   $(TOY_OBJ)   $(TOY_LIB)  $(LDFLAGS) $(DEMANGLE)
clean::
	rm -f  toy   $(TOY_OBJ)
dont_release ::
	/bin/rm -f $(RELEASE_DIR)/bin/toy
	cp  toy  $(RELEASE_DIR)/bin

ALWAYS:

