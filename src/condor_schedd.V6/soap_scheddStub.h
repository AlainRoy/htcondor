/* soap_scheddStub.h
   Generated by gSOAP 2.5.1 from gsoap_schedd.h
   Copyright (C) 2001-2004 Genivia, Inc. All Rights Reserved.
   This software is released under the gSOAP public license and GPL.
   See README.txt for further details.
*/
#ifndef soap_scheddStub_H
#define soap_scheddStub_H
#include "stdsoap2.h"

SOAP_BEGIN_NAMESPACE(soap_schedd)

/* Enumerations */

/* Classes and Structs */

/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
};

/* condorCore:Status: */
struct condorCore__Status
{
	int code;	/* return */
	char *message;
	struct condorCore__Status *next;
};

/* Array of condorCore:Requirements schema type: */
struct condorCore__Requirements
{
	char **__ptr;
	int __size;
};

/* condorCore:ClassAdStructAttr: */
struct condorCore__ClassAdStructAttr
{
	char *name;
	char type;
	char *value;
};

/* Array of condorCore:ClassAdStruct schema type: */
struct condorCore__ClassAdStruct
{
	struct condorCore__ClassAdStructAttr *__ptr;
	int __size;
};

/* Array of condorCore:ClassAdStructArray schema type: */
struct condorCore__ClassAdStructArray
{
	struct condorCore__ClassAdStruct *__ptr;
	int __size;
};

/* condorCore:RequirementsAndStatus: */
struct condorCore__RequirementsAndStatus
{
	struct condorCore__Status *status;	/* return */
	struct condorCore__Requirements *requirements;
};

/* condorCore:ClassAdStructAndStatus: */
struct condorCore__ClassAdStructAndStatus
{
	struct condorCore__Status *status;	/* return */
	struct condorCore__ClassAdStruct *classAd;
};

/* condorCore:ClassAdStructArrayAndStatus: */
struct condorCore__ClassAdStructArrayAndStatus
{
	struct condorCore__Status *status;	/* return */
	struct condorCore__ClassAdStructArray *classAdArray;
};

/* condorCore:TransactionAndStatus: */
struct condorCore__TransactionAndStatus
{
	struct condorCore__Status *status;	/* return */
	int transactionId;
};

/* condorCore:IntAndStatus: */
struct condorCore__IntAndStatus
{
	struct condorCore__Status *status;	/* return */
	int id;
};

/* condorCore:StringAndStatus: */
struct condorCore__StringAndStatus
{
	struct condorCore__Status *status;	/* return */
	char *message;
};

/* condorCore:getInfoAd: */
struct condorCore__getInfoAd
{
	void *_;	/* transient */
};

/* condorCore:getVersionString: */
struct condorCore__getVersionString
{
	void *_;	/* transient */
};

/* condorCore:getPlatformString: */
struct condorCore__getPlatformString
{
	void *_;	/* transient */
};

/* condorSchedd:beginTransaction: */
struct condorSchedd__beginTransaction
{
	int duration;
};

/* condorSchedd:commitTransaction: */
struct condorSchedd__commitTransaction
{
	int transactionId;
};

/* condorSchedd:abortTransaction: */
struct condorSchedd__abortTransaction
{
	int transactionId;
};

/* condorSchedd:extendTransaction: */
struct condorSchedd__extendTransaction
{
	int transactionId;
	int duration;
};

/* condorSchedd:newCluster: */
struct condorSchedd__newCluster
{
	int transactionId;
};

/* condorSchedd:removeCluster: */
struct condorSchedd__removeCluster
{
	int transactionId;
	int clusterId;
	char *reason;
};

/* condorSchedd:newJob: */
struct condorSchedd__newJob
{
	int transactionId;
	int clusterId;
};

/* condorSchedd:removeJob: */
struct condorSchedd__removeJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool force_removal;
};

/* condorSchedd:holdJob: */
struct condorSchedd__holdJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool email_user;
	bool email_admin;
	bool system_hold;
};

/* condorSchedd:releaseJob: */
struct condorSchedd__releaseJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool email_user;
	bool email_admin;
};

/* condorSchedd:submit: */
struct condorSchedd__submit
{
	int transactionId;
	int clusterId;
	int jobId;
	struct condorCore__ClassAdStruct *jobAd;
};

/* condorSchedd:getJobAds: */
struct condorSchedd__getJobAds
{
	int transactionId;
	char *constraint;
};

/* condorSchedd:getJobAd: */
struct condorSchedd__getJobAd
{
	int transactionId;
	int clusterId;
	int jobId;
};

/* condorSchedd:sendFile: */
struct condorSchedd__sendFile
{
	int transactionId;
	char *name;
	int offset;
	struct xsd__base64Binary *data;
};

/* condorSchedd:discoverRequirements: */
struct condorSchedd__discoverRequirements
{
	struct condorCore__ClassAdStruct *jobAd;
};

/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};

/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;
	char *SOAP_ENV__Node;
	char *SOAP_ENV__Role;
};

/* SOAP-ENV:Detail: */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <value> */
	void *value;	/* transient */
	char *__any;
};

/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;
	char *faultstring;
	char *faultactor;
	struct SOAP_ENV__Detail *detail;
	struct SOAP_ENV__Code *SOAP_ENV__Code;
	char *SOAP_ENV__Reason;
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};

/* Types With Custom (De)serializers: */

/* Typedefs */
typedef char *_XML;
typedef char *_QName;
typedef char *xsd__string;
typedef char *xsd__anyURI;
typedef float xsd__float;
typedef int xsd__int;
typedef bool xsd__boolean;
typedef ULONG64 xsd__positiveInteger;
typedef LONG64 xsd__long;
typedef char xsd__byte;
typedef char *condorCore__Requirement;
typedef int condorCore__Transaction;

/* Extern */

/* Remote Methods */

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getInfoAd(struct soap*, void *, struct condorCore__ClassAdStructAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getVersionString(struct soap*, void *, struct condorCore__StringAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getPlatformString(struct soap*, void *, struct condorCore__StringAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__beginTransaction(struct soap*, int, struct condorCore__TransactionAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__commitTransaction(struct soap*, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__abortTransaction(struct soap*, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__extendTransaction(struct soap*, int, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__newCluster(struct soap*, int, struct condorCore__IntAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__removeCluster(struct soap*, int, int, char *, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__newJob(struct soap*, int, int, struct condorCore__IntAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__removeJob(struct soap*, int, int, int, char *, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__holdJob(struct soap*, int, int, int, char *, bool, bool, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__releaseJob(struct soap*, int, int, int, char *, bool, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__submit(struct soap*, int, int, int, struct condorCore__ClassAdStruct *, struct condorCore__RequirementsAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__getJobAds(struct soap*, int, char *, struct condorCore__ClassAdStructArrayAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__getJobAd(struct soap*, int, int, int, struct condorCore__ClassAdStructAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__sendFile(struct soap*, int, char *, int, struct xsd__base64Binary *, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__discoverRequirements(struct soap*, struct condorCore__ClassAdStruct *, struct condorCore__RequirementsAndStatus &);

/* Stubs */

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getInfoAd(struct soap*, const char*, const char*, void *, struct condorCore__ClassAdStructAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getVersionString(struct soap*, const char*, const char*, void *, struct condorCore__StringAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getPlatformString(struct soap*, const char*, const char*, void *, struct condorCore__StringAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__beginTransaction(struct soap*, const char*, const char*, int, struct condorCore__TransactionAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__commitTransaction(struct soap*, const char*, const char*, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__abortTransaction(struct soap*, const char*, const char*, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__extendTransaction(struct soap*, const char*, const char*, int, int, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__newCluster(struct soap*, const char*, const char*, int, struct condorCore__IntAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__removeCluster(struct soap*, const char*, const char*, int, int, char *, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__newJob(struct soap*, const char*, const char*, int, int, struct condorCore__IntAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__removeJob(struct soap*, const char*, const char*, int, int, int, char *, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__holdJob(struct soap*, const char*, const char*, int, int, int, char *, bool, bool, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__releaseJob(struct soap*, const char*, const char*, int, int, int, char *, bool, bool, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__submit(struct soap*, const char*, const char*, int, int, int, struct condorCore__ClassAdStruct *, struct condorCore__RequirementsAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__getJobAds(struct soap*, const char*, const char*, int, char *, struct condorCore__ClassAdStructArrayAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__getJobAd(struct soap*, const char*, const char*, int, int, int, struct condorCore__ClassAdStructAndStatus &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__sendFile(struct soap*, const char*, const char*, int, char *, int, struct xsd__base64Binary *, struct condorCore__Status &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__discoverRequirements(struct soap*, const char*, const char*, struct condorCore__ClassAdStruct *, struct condorCore__RequirementsAndStatus &);

/* Skeletons */

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getInfoAd(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getVersionString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getPlatformString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__beginTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__commitTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__abortTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__extendTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__newCluster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__removeCluster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__newJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__removeJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__holdJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__releaseJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__submit(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__getJobAds(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__getJobAd(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__sendFile(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__discoverRequirements(struct soap*);

SOAP_END_NAMESPACE(soap_schedd)

#endif

/* end of soap_scheddStub.h */
