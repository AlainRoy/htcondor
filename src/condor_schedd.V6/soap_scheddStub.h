/* soap_scheddStub.h
   Generated by gSOAP 2.3 rev 7 from gsoap_schedd.h
   Copyright (C) 2001-2003 Genivia inc.
   All Rights Reserved.
*/
#ifndef soap_scheddStub_H
#define soap_scheddStub_H
#include "stdsoap2.h"

SOAP_BEGIN_NAMESPACE(soap_schedd)

/* Enumerations */

/* Classes and Structs */

/* condorCore:ClassAdStructAttr: */
struct condorCore__ClassAdStructAttr
{
	char *name;
	char type;
	char *value;
};

/* Array of condorCore:ClassAdStructAttr schema type: */
struct ClassAdStruct
{
	struct condorCore__ClassAdStructAttr *__ptr;
	int __size;
};

/* Array of condorCore:ClassAdStructAttr[] schema type: */
struct ClassAdStructArray
{
	struct ClassAdStruct *__ptr;
	int __size;
};

/* condorCore:getInfoAdResponse: */
struct condorCore__getInfoAdResponse
{
	struct ClassAdStruct ad;	/* return */
};

/* condorCore:getInfoAd: */
struct condorCore__getInfoAd
{
	void *_;	/* transient */
};

/* condorCore:getVersionStringResponse: */
struct condorCore__getVersionStringResponse
{
	char *verstring;	/* return */
};

/* condorCore:getVersionString: */
struct condorCore__getVersionString
{
	void *_;	/* transient */
};

/* condorCore:getPlatformStringResponse: */
struct condorCore__getPlatformStringResponse
{
	char *verstring;	/* return */
};

/* condorCore:getPlatformString: */
struct condorCore__getPlatformString
{
	void *_;	/* transient */
};

/* condorSchedd:beginTransactionResponse: */
struct condorSchedd__beginTransactionResponse
{
	int transactionId;	/* return */
};

/* condorSchedd:beginTransaction: */
struct condorSchedd__beginTransaction
{
	int duration;
};

/* condorSchedd:commitTransactionResponse: */
struct condorSchedd__commitTransactionResponse
{
	int result;	/* return */
};

/* condorSchedd:commitTransaction: */
struct condorSchedd__commitTransaction
{
	int transactionId;
};

/* condorSchedd:abortTransactionResponse: */
struct condorSchedd__abortTransactionResponse
{
	int result;	/* return */
};

/* condorSchedd:abortTransaction: */
struct condorSchedd__abortTransaction
{
	int transactionId;
};

/* condorSchedd:extendTransactionResponse: */
struct condorSchedd__extendTransactionResponse
{
	int result;	/* return */
};

/* condorSchedd:extendTransaction: */
struct condorSchedd__extendTransaction
{
	int transactionId;
	int duration;
};

/* condorSchedd:newClusterResponse: */
struct condorSchedd__newClusterResponse
{
	int result;	/* return */
};

/* condorSchedd:newCluster: */
struct condorSchedd__newCluster
{
	int transactionId;
};

/* condorSchedd:removeClusterResponse: */
struct condorSchedd__removeClusterResponse
{
	int result;	/* return */
};

/* condorSchedd:removeCluster: */
struct condorSchedd__removeCluster
{
	int transactionId;
	int clusterId;
	char *reason;
};

/* condorSchedd:newJobResponse: */
struct condorSchedd__newJobResponse
{
	int result;	/* return */
};

/* condorSchedd:newJob: */
struct condorSchedd__newJob
{
	int transactionId;
	int clusterId;
};

/* condorSchedd:removeJobResponse: */
struct condorSchedd__removeJobResponse
{
	int result;	/* return */
};

/* condorSchedd:removeJob: */
struct condorSchedd__removeJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool force_removal;
};

/* condorSchedd:holdJobResponse: */
struct condorSchedd__holdJobResponse
{
	int result;	/* return */
};

/* condorSchedd:holdJob: */
struct condorSchedd__holdJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool email_user;
	bool email_admin;
	bool system_hold;
};

/* condorSchedd:releaseJobResponse: */
struct condorSchedd__releaseJobResponse
{
	int result;	/* return */
};

/* condorSchedd:releaseJob: */
struct condorSchedd__releaseJob
{
	int transactionId;
	int clusterId;
	int jobId;
	char *reason;
	bool email_user;
	bool email_admin;
};

/* condorSchedd:submitResponse: */
struct condorSchedd__submitResponse
{
	int result;	/* return */
};

/* condorSchedd:submit: */
struct condorSchedd__submit
{
	int transactionId;
	int clusterId;
	int jobId;
	struct ClassAdStruct *jobAd;
};

/* condorSchedd:getJobAdsResponse: */
struct condorSchedd__getJobAdsResponse
{
	struct ClassAdStructArray result;	/* return */
};

/* condorSchedd:getJobAds: */
struct condorSchedd__getJobAds
{
	int transactionId;
	char *constraint;
};

/* condorSchedd:getJobAdResponse: */
struct condorSchedd__getJobAdResponse
{
	struct ClassAdStruct result;	/* return */
};

/* condorSchedd:getJobAd: */
struct condorSchedd__getJobAd
{
	int transactionId;
	int clusterId;
	int jobId;
};

/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};

/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;
	char *SOAP_ENV__Node;
	char *SOAP_ENV__Role;
};

/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;
	char *faultstring;
	char *faultactor;
	char *detail;
	struct SOAP_ENV__Code *SOAP_ENV__Code;
	char *SOAP_ENV__Reason;
	char *SOAP_ENV__Detail;
};

/* Types With Custom (De)serializers: */

/* Typedefs */
typedef char *xsd__string;
typedef char *xsd__anyURI;
typedef float xsd__float;
typedef int xsd__int;
typedef bool xsd__boolean;
typedef ULONG64 xsd__positiveInteger;
typedef LONG64 xsd__long;
typedef char xsd__byte;
typedef char *_QName;

/* Extern */

/* Remote Methods */

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getInfoAd(struct soap*, void *, struct ClassAdStruct &);

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getVersionString(struct soap*, void *, char *&);

SOAP_FMAC5 int SOAP_FMAC6 condorCore__getPlatformString(struct soap*, void *, char *&);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__beginTransaction(struct soap*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__commitTransaction(struct soap*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__abortTransaction(struct soap*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__extendTransaction(struct soap*, int, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__newCluster(struct soap*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__removeCluster(struct soap*, int, int, char *, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__newJob(struct soap*, int, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__removeJob(struct soap*, int, int, int, char *, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__holdJob(struct soap*, int, int, int, char *, bool, bool, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__releaseJob(struct soap*, int, int, int, char *, bool, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__submit(struct soap*, int, int, int, struct ClassAdStruct *, int &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__getJobAds(struct soap*, int, char *, struct ClassAdStructArray &);

SOAP_FMAC5 int SOAP_FMAC6 condorSchedd__getJobAd(struct soap*, int, int, int, struct ClassAdStruct &);

/* Stubs */

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getInfoAd(struct soap*, const char*, const char*, void *, struct ClassAdStruct &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getVersionString(struct soap*, const char*, const char*, void *, char *&);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorCore__getPlatformString(struct soap*, const char*, const char*, void *, char *&);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__beginTransaction(struct soap*, const char*, const char*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__commitTransaction(struct soap*, const char*, const char*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__abortTransaction(struct soap*, const char*, const char*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__extendTransaction(struct soap*, const char*, const char*, int, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__newCluster(struct soap*, const char*, const char*, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__removeCluster(struct soap*, const char*, const char*, int, int, char *, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__newJob(struct soap*, const char*, const char*, int, int, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__removeJob(struct soap*, const char*, const char*, int, int, int, char *, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__holdJob(struct soap*, const char*, const char*, int, int, int, char *, bool, bool, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__releaseJob(struct soap*, const char*, const char*, int, int, int, char *, bool, bool, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__submit(struct soap*, const char*, const char*, int, int, int, struct ClassAdStruct *, int &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__getJobAds(struct soap*, const char*, const char*, int, char *, struct ClassAdStructArray &);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_condorSchedd__getJobAd(struct soap*, const char*, const char*, int, int, int, struct ClassAdStruct &);

/* Skeletons */

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getInfoAd(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getVersionString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorCore__getPlatformString(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__beginTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__commitTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__abortTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__extendTransaction(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__newCluster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__removeCluster(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__newJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__removeJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__holdJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__releaseJob(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__submit(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__getJobAds(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_condorSchedd__getJobAd(struct soap*);

SOAP_END_NAMESPACE(soap_schedd)

#endif

/* end of soap_scheddStub.h */
