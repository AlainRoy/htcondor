About this directory:

	There are two schedds in this directory: version 5.7 and version 6. To make
	schedd version 6, just type "make". To make version 5.7 type "make 5.7".
	The main difference between the two is that version 6 uses capability and
	version 5.7 doesn't.

How to run condor_schedd:

	condor_schedd [-fbt] [-n SCHEDDNAME]

		-f		Running in foreground.
		-b		Alternative of -f, running in background. This is the default.
		-t		Writing log to terminal. If not specified, must then specify
				SCHEDD_LOG in configuration file.
		-n		User specified name for the schedd.

How to run condor_schedd with condor_master:

	Add SCHEDD to the value of configuration variable DAEMON_LIST. e.g.
		DAEMON_LIST = MASTER, STARTD, SCHEDD, KBDD
	Set the value of configuration variable SCHEDD to the pathname of
	condor_schedd. e.g. SCHEDD = $(CONDOR_HOME)/bin/condor_schedd
	After made the above configuration, starting condor_master will bring up
	the schedd.

How to configure condor_schedd:

	condor_schedd is configured by adding variables in configuration file. Some
	configuration variables are required, other are not. Each configuration
	variable and it's value occupy one line. Each line looks like
		VARIABLE_NAME = VALUE
	e.g. COLLECTOR_HOST = condor.cs.wisc.edu
	The ordering of them is not important. The following variables are required.

		SCHEDD_LOG			Pathname of the log file. This variable is not
							required if schedd is invoked with '-t' option.
		LOG					Pathname of the log directory.
		SPOOL				Pathname of the spool directory.
		COLLECTOR_HOST		Name of the host on which condor_collector runs.
		NEGOTIATOR_HOST		Name of the host on which condor_negotiator runs.
		SHADOW				Pathname of condor_shadow.
		SHADOW_PVM or
		SHADOW_CARMI		Pathname of the shadow that manages pvm jobs.
		CONDOR_ADMIN		Email address of condor administrator.
		MAIL				Mailer program pathname.

	The following variables are not required.

		ACCOUNTANT_HOST		Name of the host on which condor_accountant runs.
		SCHEDD_INTERVAL		How often should schedd clean itself up. Default is
							120 seconds.
		SCHEDD_DEBUG		Debugging flags. Adding "Foreground" to the value
							has the same effect as invoking the schedd with
							'-f' option.
							e.g. SCHEDD_DEBUG = D_ALWAYS | Foreground
							has the same effect as setting
							SCHEDD_DEBUG = D_ALWAYS
							and invoking condor_schedd by "condor_schedd -f".
		MAX_JOB_STARTS		Maximum # of jobs that can be started in one
							negotiation cycle. Default is 5.
		MAX_JOBS_RUNNING	Maximum # of shadows that the schedd can manage.
							Default is 15.
		RESERVED_SWAP		Reserved swap space for shadows. Default is 5
							megabytes.
		ALIVE_FREQUENCY		The frequency at which schedd sends alive messages
							to the resources that it holds. Default equals to
							SCHEDD_INTERVAL.
		SHADOW_SIZE_ESTIMATE	Estimated size of shadow process. Default is
								128 kilobytes.
		SCHEDD_SCALING_FACTOR	Updown algorithm parameter. Default is 60.
		SCHEDD_HEAVY_USER_TIME	Updown algorithm parameters. Default is 120.

Differences between version 6 and previous version (5.6):

	1.	Version 6 schedd uses queue manager to manage its job queue instead of
	  	using DBM. All jobs are stored in memory. Transactions on jobs are
		logged
	   	so that job information persists through schedd crashing. Job queue is
	   	accessed through remote procedure calls.
	2. 	Version 6 schedd accepts capability from the central manager. All match
	   	operations have to be identified with capabilities.
	3. 	More of the code are in c++ now. The version 6 schedd consists of a
	   	DaemonCore object, a Scheduler object and the queue manager.
