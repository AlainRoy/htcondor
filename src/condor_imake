#!/bin/sh

if [ -d CVS ]; then
	echo "You probably don't want to do this in your source repository."
	echo "Try doing it in a build directory instead."
	exit 1
fi

arch=`uname -m`
osversion=`uname -r`
# Make sure if we get back something that begins with "IRIX" that we
# strip off anything after it (e.g. "IRIX64", etc).
os=`uname -s | sed 's/IRIX.*/IRIX/'`

ArchFlag=""
Opsys=""
Other=""
Other2=""

# kerberos discovery
if [ -f /p/condor/workspaces/kerberos/lib/libkrb5.a ] ; then
	KerbPath="-DKERBEROS_PATH=/p/condor/workspaces/kerberos"
	HasKerb="-DHAS_KERBEROS=YES"
	if [ -f /p/condor/workspaces/kerberos/lib/libk5crypto.a ] ; then
		KerbK5="-DKERBEROS_K5=YES"
	else
		KerbK5="-DKERBEROS_K5=NO"
	fi

	KerbFlags="$KerbPath $HasKerb $KerbK5"
fi

# figure out where that annoying libgcc is... 
LIBGCC=`gcc -print-libgcc-file-name`
EgcsLib="-DLIB_GCC=$LIBGCC"

if [ $os = "HP-UX" -a $osversion = "B.10.20" ] ; then
	Opsys="-DIS_HPUX10"

elif [ $os = "OSF1" -a $osversion = "V4.0" ] ; then
	Opsys="-DIS_DUX4"

elif [ $os = "Linux" ]; then
	Opsys="-DIS_LINUX"
	if [ -f /lib/libc.so.6* ] ; then
		Other="-DIS_GLIBC"
	fi
	if [ -f /lib/libc-2.0.* ]; then
		Other2="-DIS_GLIBC20"
	elif [ -f /lib/libc-2.1.* ]; then
		Other2="-DIS_GLIBC21"
	elif [ -f /lib/libc-2.2.* ]; then
		Other2="-DIS_GLIBC22"
	fi
	if [ $arch = "i686" -o $arch = "i586" -o $arch = "i486" ] ; then
		ArchFlag="-DIS_I386"
	elif [ $arch = "alpha" ] ; then
		ArchFlag="-DIS_ALPHA"
	fi

elif [ $os = "SunOS" ]; then
	if [ $arch = "sun4m" -o $arch = "sun4u" ]; then
		ArchFlag="-DIS_SUN4X"
	elif [ $arch = "i86pc" ]; then
		ArchFlag="-DIS_X86"
	fi

	if [ $osversion = "5.5.1" ] ; then
		Opsys="-DIS_SOLARIS251"
	elif [ $osversion = "5.6" ] ; then
		Opsys="-DIS_SOLARIS26"
	elif [ $osversion = "5.7" ] ; then
		Opsys="-DIS_SOLARIS27"
	elif [ $osversion = "5.8" ] ; then
		Opsys="-DIS_SOLARIS28"
	fi

elif [ $os = "IRIX" ] ; then
	if [ $osversion = "6.5" ] ; then
		Opsys="-DIS_IRIX65"
	else
		Opsys="-DIS_IRIX62"
	fi
fi

imake -s Makefile $ArchFlag $Opsys $Other $Other2 $EgcsLib $KerbFlags -I../config -I../../config -I../../../config $*

