-------- Do not delete this line, awk uses it ---------------------
CMNT
CMNT Machine Description
CMNT
ARCH = Architecture
OPSYS = OperatingSystem

CMNT
CMNT   Local stuff.
CMNT
LOCAL_CONFIG_FILE = $(LOCAL_DIR)/condor_config.local

CMNT
CMNT	The right thing to do is to get this value out of the kernel.
CMNT	And in fact we do on most platforms.
MEMORY		= 64

CMNT   Try to save this much swap space by not starting new shadows.  Number
CMNT   is in megabytes.
RESERVED_SWAP   = 5

CMNT   Estimated size of shadow processes to run one job.  Specified in kilobytes.
SHADOW_SIZE_ESTIMATE = ShadowSizeEstimate


CMNT
CMNT	THINK AT LEAST TWICE BEFORE EDITING THE REST OF THIS FILE...
CMNT

CMNT
CMNT	Pathnames
CMNT
ROSTER_FILE	= $(LOCAL_DIR)/roster
LOG		= $(LOCAL_DIR)/log
SPOOL		= $(LOCAL_DIR)/spool
EXECUTE		= $(LOCAL_DIR)/execute
HISTORY		= $(SPOOL)/history
BIN		= $(RELEASEDIR)/bin
LIB		= $(RELEASEDIR)/lib
MACHINE_STATUS_FILE	= $(LOG)/machine_status
CHECKJOBQUEUE		= $(BIN)/condor_jobqueue -w -m
QUEUE_LOCK		= $(LOG)/QueueLock
USERLOG_LOCK		= $(LOG)/ULogLock

CMNT
CMNT       CONDOR_KeyboardD Macros
CMNT
KBDD		= $(BIN)/condor_kbdd
KBDD_LOG	= $(LOG)/KbdLog
MAX_KBDD_LOG	= 64000
KBDD_DEBUG	=
#if HAS_X
X_RUNS_HERE     = True
#else
X_RUNS_HERE	= False
#endif
#if HAS_X_EXTENSIONS
USE_X_IDLE_EXTENSION = True
#else
USE_X_IDLE_EXTENSION = False
#endif

CMNT
CMNT		CONDOR_StartD Macros
CMNT
STARTD			= $(BIN)/condor_startd
STARTD_LOG		= $(LOG)/StartLog
MAX_STARTD_LOG		= 64000
STARTD_DEBUG		=
POLLING_FREQUENCY	= 5
POLLS_PER_UPDATE	= 24
#ifdef KbdDeviceName
KBD_DEVICE	= KbdDeviceName
#endif
#ifdef MouseDeviceName
MOUSE_DEVICE	= MouseDeviceName
#endif

CMNT
CMNT		PVM related Macros
CMNT
PVMD		= $(BIN)/condor_pvmd

CMNT
CMNT        CONDOR_Preen Macros
CMNT
PREEN             = $(BIN)/condor_preen -m -r
PREEN_ADMIN       = $(CONDOR_ADMIN)

CMNT
CMNT		CONDOR_SchedD Macros
CMNT
SCHEDD			= $(BIN)/condor_schedd
SCHEDD_LOG		= $(LOG)/SchedLog
MAX_SCHEDD_LOG		= 64000
SCHEDD_DEBUG		=
SCHEDD_INTERVAL		= 300
MAX_JOB_STARTS		= 5
MAX_JOBS_RUNNING	= 15

CMNT
CMNT Collector Macros
CMNT
COLLECTOR		= $(BIN)/condor_collector
COLLECTOR_HOST		= $(CONDOR_HOST)
COLLECTOR_DEBUG		=
COLLECTOR_LOG		= $(LOG)/CollectorLog
MAX_COLLECTOR_LOG	= 64000
CLIENT_TIMEOUT		= 30
COLLECTOR_STATS_FILE    = $(LOCAL_DIR)/collector_stats

CMNT
CMNT Negotiator Macros
CMNT
NEGOTIATOR			= $(BIN)/condor_negotiator
NEGOTIATOR_HOST			= $(CONDOR_HOST)
NEGOTIATOR_DEBUG		=
NEGOTIATOR_LOG			= $(LOG)/NegotiatorLog
MAX_NEGOTIATOR_LOG		= 64000
NEGOTIATOR_INTERVAL		= 300
# The PREEMPTION_LIMIT is in minutes
PREEMPTION_LIMIT                = 120
PREEMPTION_LIMIT_VANILLA	= 10000
MACHINE_UPDATE_INTERVAL		= 300

CMNT
CMNT Shadow Macros
CMNT
SHADOW				= $(BIN)/condor_shadow
SHADOW_LOG			= $(LOG)/ShadowLog
SHADOW_LOCK			= $(LOG)/ShadowLock
MAX_SHADOW_LOG			= 64000
SHADOW_DEBUG			=

CMNT
CMNT Starter Macros
CMNT
STARTER			= $(BIN)/condor_starter
ALTERNATE_STARTER_0	= $(BIN)/condor_starter.pvm.mike
ALTERNATE_STARTER_1	= $(BIN)/condor_starter.carmi
ALTERNATE_STARTER_2	= $(BIN)/condor_starter.V5
STARTER_DEBUG		= D_NODATE
CMNT CKPT_TIMEOUT is how long we have to checkpoint after a vacate request
CKPT_TIMEOUT		= 300
STARTER_LOG		= $(LOG)/StarterLog
MAX_STARTER_LOG		= 64000
STARTER_LOCAL_LOGGING	= TRUE

CMNT
CMNT CONDOR_Master Macros
CMNT
MASTER				= $(BIN)/condor_master
MASTER_LOG			= $(LOG)/MasterLog
TRUNC_MASTER_LOG_ON_OPEN	= True
MASTER_DEBUG			=
MAX_MASTER_LOG			= 64000
RESTARTS_PER_HOUR		= 12
PUBLISH_OBITUARIES 		= TRUE
OBITUARY_LOG_LENGTH		= 20

CMNT
CMNT Machine Control Expressions & Macros
CMNT
OpSys		: "$(OPSYS)"
Arch		: "$(ARCH)"
Machine		: "$(HOSTNAME)"

CMNT
CMNT Expressions used to control starting and stopping of foreign jobs
CMNT
StateTimer	= (CurrentTime - EnteredCurrentState)
MINUTE		= 60
HOUR		= (60 * $(MINUTE))

BackgroundLoad		= 0.3
HighLoad		= 1.5
StartIdleTime		= 15 * $(MINUTE)
ContinueIdleTime	= 5 * $(MINUTE)
MaxSuspendTime		= 10 * $(MINUTE)
MaxVacateTime		= $(CKPT_TIMEOUT) + (1 * $(MINUTE))

KeyboardBusy		= KeyboardIdle < $(POLLING_FREQUENCY)
CPU_Idle		= LoadAvg <= $(BackgroundLoad)
CPU_Busy		= LoadAvg >= $(HighLoad)

WANT_SUSPEND		: True
WANT_VACATE 		: True
WANT_SUSPEND_VANILLA	: True
WANT_VACATE_VANILLA	: True

START		: $(CPU_Idle) && KeyboardIdle > $(StartIdleTime)
SUSPEND		: $(CPU_Busy) || $(KeyboardBusy)
CONTINUE	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
VACATE		: $(StateTimer) > $(MaxSuspendTime)
KILL		: $(StateTimer) > $(MaxVacateTime)
SUSPEND_VANILLA		: $(CPU_Busy) || $(KeyboardBusy)
CONTINUE_VANILLA	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
VACATE_VANILLA		: $(StateTimer) > $(MaxSuspendTime)
KILL_VANILLA		: $(StateTimer) > $(MaxVacateTime)

CMNT 
CMNT Periodic Checkpointing (uncomment to enable)
CMNT LastCkpt	= (CurrentTime - LastPeriodicCkpt)
CMNT PERIODIC_CHECKPOINT	: ( (image_size < 60000) && ( $(LastCkpt) > (6 * $(HOUR)) ) ) || ( $(LastCkpt) > (12 * $(HOUR)) ) 

CMNT
CMNT Expressions used to prioritize job queue
CMNT
UNEXPANDED	= 0
Expanded	= (Status != $(UNEXPANDED))
PRIO		: (UserPrio * 10) + $(Expanded) - (QDate / 1000000000.0)


CMNT
CMNT Expressions used by the central manager
CMNT
INACTIVE	: Users <= 0
UPDATE_PRIO	: Prio + Users - Running
