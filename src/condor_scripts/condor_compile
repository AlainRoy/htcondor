#!/bin/sh 
#  THIS SCRIPT IS BEST VIEWED WITH TAB STOPS IN YOUR EDITOR AT 4 SPACES
#	Author Todd Tannenbaum, 6/97
#	Copyright 1997 by the Condor Team, All Rights Reserved.
#	mailto:condor-admin@cs.wisc.edu  http://www.cs.wisc.edu/condor

# --------------------------------------------------

# Here are the default paths/directories to use.
# These defaults can be overidden with command-line args.
# Customize these if desired.  The defaults provided should be
# correct for most installations, however.
CONDOR_LIBDIR=`condor_config_val LIB`
CONDOR_CLIB=$CONDOR_LIBDIR/condor_syscall_lib.a
STATIC_ZLIB=/usr/lib/libz.a
CONDOR_ZCLIB=$CONDOR_LIBDIR/condor_syscall_zlib.a
CONDOR_RT0=$CONDOR_LIBDIR/condor_rt0.o
CONDOR_CPLUS=$CONDOR_LIBDIR/c_plus_alloc.o
CONDOR_LD_DIR=$CONDOR_LIBDIR

# --------------------------------------------------

# Tell our "ld" to link to with the Condor libs
CONDOR_COMPILE=yes
export CONDOR_COMPILE

# Handle any command-line args
while [ A = A ]
do
	if [ $# = 0 ]; then
		break;
	fi


	if [ $1 = "-condor_syscall_lib" ]; then
		shift
		CONDOR_CLIB=$1
		shift
		continue
	fi

	if [ $1 = "-condor_rt0" ]; then
		shift
		CONDOR_RT0=$1
		shift
		continue
	fi

	if [ $1 = "-condor_plus_alloc" ]; then
		shift
		CONDOR_CPLUS=$1
		shift
		continue
	fi

	if [ $1 = "-condor_ld_dir" ]; then
		shift
		CONDOR_LD_DIR=$1
		shift
		continue
	fi

	if [ $1 = "-condor_standalone" ]; then
		CONDOR_CLIB=$CONDOR_LIBDIR/libckpt.a
		CONDOR_ZCLIB=$CONDOR_LIBDIR/libzckpt.a
		shift
		continue
	fi

	if [ $1 = "-condor_lib" ]; then
		shift
		CONDOR_LIBDIR=$1
		shift
		# Reset anything based off of the libdir by default
		CONDOR_CLIB=$CONDOR_LIBDIR/condor_syscall_lib.a
		CONDOR_ZCLIB=$CONDOR_LIBDIR/condor_syscall_zlib.a
		CONDOR_RT0=$CONDOR_LIBDIR/condor_rt0.o
		CONDOR_CPLUS=$CONDOR_LIBDIR/c_plus_alloc.o
		CONDOR_LD_DIR=$CONDOR_LIBDIR
		continue
	fi

	# if we made it here, there are no more command-line options
	break
done

if [ -r $STATIC_ZLIB -a -r $CONDOR_ZCLIB ]; then
	CONDOR_CLIB="$CONDOR_ZCLIB $STATIC_ZLIB"
fi

# Export these so our special "ld" script can find them
export CONDOR_LIBDIR
export CONDOR_CLIB
export CONDOR_RT0
export CONDOR_CPLUS
export CONDOR_LD_DIR

# Since uname and awk live in different places on various
# platforms, use a PATH.  NOTE: we want to add these things to the END
# of the PATH, to make sure people get the version of the compiler
# they thought they were using. 
PATH=$PATH:/bin:/usr/bin

# Figure out what architecture we're running on 

# Make sure if we get back something that begins with "IRIX" that we
# strip off anything after it (e.g. "IRIX64", etc).
os=`uname -s | sed 's/IRIX.*/IRIX/'`

osver=`uname -r`
if [ $os = "HP-UX" ]; then
	osmajver=`uname -r | awk -F. '{print $2}' -`
else
	osmajver=`uname -r | awk -F. '{print $1}' -`
fi

osfull="$os$osmajver"

# Determine if the system ld has been replaced with our ld script
# or not.
CONDOR_FULLINSTALL=false

case $os in
	IRIX )
		if [ -x /usr/lib/ld.real -a -x /usr/lib/uld.real ]; then
			CONDOR_FULLINSTALL=true
		fi
		# on IRIX62, set SGI_ABI environment variable to old 32-bit code
		# only, since that is what condor_syscall_lib expects.
		
			#6/3/99 mikeu: attempt to fix this to allow user to specify 
			#which linker to use, or use default. Commented out these 
			#lines so it can be specified elsewhere...
		#SGI_ABI=-32
		#export SGI_ABI
		;;
	HP-UX )
		if [ $osmajver = "10" ]; then
			if [ -x /usr/ccs/bin/ld.real ]; then
				CONDOR_FULLINSTALL=true
			fi 
		fi
		if [ $osmajver = "09" ]; then
			if [ -x /bin/ld.real ]; then
				CONDOR_FULLINSTALL=true
			fi 
		fi
		;;
	SunOS )
		if [ $osmajver = 5 ]; then
			if [ -x /usr/ccs/bin/ld.real ]; then
				CONDOR_FULLINSTALL=true
			fi 
		fi
		if [ $osmajver = 4 ]; then
			if [ -x /bin/ld.real ]; then
				CONDOR_FULLINSTALL=true
			fi 
		fi
		;;
	Linux )
		if [ -x /usr/bin/ld.real ]; then
			CONDOR_FULLINSTALL=true
		fi 
		;;
	OSF1 )
		if [ -x /usr/lib/cmplrs/cc/ld.real ]; then
			CONDOR_FULLINSTALL=true
		fi 
		;;
	* )
		if [ -x /bin/ld.real ]; then
			CONDOR_FULLINSTALL=true
		fi 
		;;
esac

# Usage info should go here...
if [ $# = 0 ]; then
	echo "Usage: condor_compile [ -condor_standalone ] <command> [options/files .... ]"
	if [ $CONDOR_FULLINSTALL = true ]; then
		echo "  where <commmand> is whatever you enter to compile/link your application."
		exit 1
	fi
	echo "  where <command> is one of the following:"
	echo "  gcc, g++, g77, cc, acc, c89, CC, f77, fort77, ld "
	echo "  (on some platforms, f90 is also allowed)"
	exit 1
fi

# if fully installed, then just run the command - eventually we'll 
# hit our special ld

if [ $CONDOR_FULLINSTALL = true ]; then
	exec $*
fi

# If we were passed a -c, we're not going to be used for linking, so
# we don't have to do anything special to make sure our special ld is
# used.  
ARGS=$*
NAME=$1
while [ A = A ]
do
	if [ $# = 0 ]; then
		break;
	fi
	if [ $1 = "-c" ]; then
		exec $ARGS;
	fi
	shift
done


# If not fully installed, and we didn't see a -c, add options to force
# the compiler to use our special ld

# First of all, we need to strip off any path from our (now) first
# argument, so we can compare it different names, even if the user
# specified a full path to the program.
myname=`echo $NAME | sed "s/.*\///"`

# Handle GNU compilers
if [ $myname = "gcc" ]; then
	exec $ARGS -B$CONDOR_LD_DIR/
fi 

if [ $myname = "g++" ]; then
	exec $ARGS -B$CONDOR_LD_DIR/
fi 

if [ $myname = "g77" ]; then
	exec $ARGS -B$CONDOR_LD_DIR/
fi 

# Handle ld (linker).  Since the user might have specified a full path
# to ld, we want to shift (to get rid of the ld we were passed), and
# call our ld directly with the remaining arguments.
if [ $myname = "ld" ]; then
	shift;
	exec $CONDOR_LD_DIR/ld $ARGS
fi

# Handle all the vendor system compilers ---------------
# the idea here is to simply append whatever command line
# option(s) allows us to use $CONDOR_LIBDIR/ld instead
# of the default path for ld.

case $os in 

	IRIX | OSF1 )
		if [ $myname = "cc" ]; then
			exec $ARGS -tul -h$CONDOR_LD_DIR -B
		fi

		if [ $myname = "CC" ]; then
			exec $ARGS -tul -h$CONDOR_LD_DIR -B
		fi

		if [ $myname = "c89" ]; then
			exec $ARGS -tul -h$CONDOR_LD_DIR -B
		fi

		if [ $myname = "f77" ]; then
			exec $ARGS -tul -h$CONDOR_LD_DIR -B
		fi 
	
		if [ $myname = "f90" -a $os = "OSF1" ]; then	
			exec $ARGS -tul -h$CONDOR_LD_DIR -B
		fi 

		if [ $myname = "KCC" -a $os = "OSF1" ]; then	
			exec $ARGS --backend -tul --backend \
			-h$CONDOR_LD_DIR --backend -B
		fi 

		;;

	HP-UX )
		if [ $myname = "cc" ]; then
			exec $ARGS -tl,$CONDOR_LD_DIR/ld
		fi

		if [ $myname = "CC" ]; then
			exec $ARGS -tl,$CONDOR_LD_DIR/ld
		fi

		if [ $myname = "c89" ]; then
			exec $ARGS -tl,$CONDOR_LIBDIR/ld
		fi

		if [ $myname = "f77" ]; then
			exec $ARGS -tl,$CONDOR_LIBDIR/ld
		fi 

		if [ $myname = "fort77" ]; then
			exec $ARGS -tl,$CONDOR_LIBDIR/ld
		fi 
		
		;;

	SunOS )
		use_qpath=`cc -help -flags | grep Qpath | wc -l`
		if [ $myname = "cc" -a $use_qpath = 0 ]; then
			exec $ARGS -Yl,$CONDOR_LD_DIR
		fi
		if [ $myname = "cc" -a $use_qpath != 0 ]; then
			exec $ARGS -Qpath $CONDOR_LD_DIR
		fi

		if [ $myname = "acc" ]; then
			exec $ARGS -Qpath $CONDOR_LD_DIR
		fi

		if [ $myname = "CC" ]; then
			exec $ARGS -Qpath $CONDOR_LD_DIR
		fi

		if [ $myname = "f77" ]; then
			exec $ARGS -Qpath $CONDOR_LD_DIR
		fi 
		
		if [ $myname = "f90" ]; then
			exec $ARGS -Qpath $CONDOR_LD_DIR
		fi 
		
		;;

	Linux )
		# Linux's system compilers are GNU 
		if [ $myname = "cc" ]; then
			exec $ARGS -B$CONDOR_LD_DIR/
		fi 

		if [ $myname = "c++" ]; then
			exec $ARGS -B$CONDOR_LD_DIR/
		fi 

		if [ $myname = "f77" ]; then
			exec $ARGS -B$CONDOR_LD_DIR/
		fi 
		
		;;
esac

# If we made it here, we did not do anything, so print out usage
	echo "Usage: condor_compile [ -condor_standalone ] <command> [options/files .... ]"
	if [ $CONDOR_FULLINSTALL = true ]; then
		echo "  where <commmand> is whatever you enter to compile/link your application."
		exit 1
	fi
	echo "  where <command> is one of the following:"
	echo "  gcc, g++, g77, cc, acc, c89, CC, f77, fort77, ld "
	echo "  (on some platforms, f90 is also allowed)"
	exit 1
