######################################################################
##
##  condor_config.local.smp
##
##  This file contains all settings needed to run the SMP-Startd
##  contrib module.  This includes the version 6.1 Startd and
##  supporting tools.  You can run this startd, even in a version 6.0 
##  pool.  You will only need this file if you use the SMP-Startd
##  contrib module.  In all other cases, it can be ignored.
##
##  Depending on how you chose to install the SMP startd module, you
##  should either copy these settings into your global config file (if
##  you installed the SMP-startd for your whole pool, or into the
##  local config file for each machine running the new startd (if you
##  are only running the new version on certain machines).
##
##  Unless otherwise specified, settings that are commented out show
##  the defaults that are used if you don't define a value.
##
##  The file is divided into thee main parts: the new policy settings,
##  other settings that control the new startd, and other settings
##  that control supporting tools.
##
######################################################################

######################################################################
##  New Policy Settings
##
##  Not all of these policy settings are new.  In fact, many of them
##  are already defined in the 6.0 default config file.  The entire
##  policy section is just included here for completeness.
##
##  The only new things are: 
##  + The PREEMPT expression
##  + The different KILL expression (which now only controls when a
##    job goes from Preempting/Vacating to Preempting/Killing).
##  + The new default for WANT_VACATE, which includes
##    $(ActivationTimer), the time the current job has been running on
##    this machine.  
######################################################################

##  These macros are here to help write legible expressions:
MINUTE		= 60
HOUR		= (60 * $(MINUTE))
StateTimer	= (CurrentTime - EnteredCurrentState)
ActivityTimer	= (CurrentTime - EnteredCurrentActivity)
ActivationTimer = (CurrentTime - JobStart)
LastCkpt	= (CurrentTime - LastPeriodicCheckpoint)

##  The JobUniverse attribute is just an int.  These macros can be
##  used to specify the universe in a human-readable way:
STANDARD	= 1
PVM		= 4
VANILLA		= 5

NonCondorLoadAvg	= (LoadAvg - CondorLoadAvg)
BackgroundLoad		= 0.3
HighLoad		= 0.5
StartIdleTime		= 15 * $(MINUTE)
ContinueIdleTime	= 5 * $(MINUTE)
MaxSuspendTime		= 10 * $(MINUTE)
MaxVacateTime		= 5 * $(MINUTE)

KeyboardBusy		= (KeyboardIdle < $(MINUTE))
CPU_Idle		= ($(NonCondorLoadAvg) <= $(BackgroundLoad))
CPU_Busy		= ($(NonCondorLoadAvg) >= $(HighLoad))
MachineBusy		= ($(CPU_Busy) || $(KeyboardBusy))

WANT_SUSPEND		: True
WANT_VACATE 		: $(ActivationTimer) > 10 * $(MINUTE)
#WANT_SUSPEND_VANILLA	: True
#WANT_VACATE_VANILLA	: True

START		: $(CPU_Idle) && KeyboardIdle > $(StartIdleTime)
SUSPEND		: $(MachineBusy)
CONTINUE	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
PREEMPT		: ( ($(ActivityTimer) > $(MaxSuspendTime)) && \
		   (Activity == "Suspended") ) || \
		  ( SUSPEND && (WANT_SUSPEND == False) )
KILL		: $(ActivityTimer) > $(MaxVacateTime) 

##  Only define vanilla versions of these if you want to make them
##  different from the above settings.
#SUSPEND_VANILLA	: $(MachineBusy)
#CONTINUE_VANILLA	: $(CPU_Idle) && KeyboardIdle > $(ContinueIdleTime)
#PREEMPT_VANILLA	: ( ($(ActivityTimer) > $(MaxSuspendTime)) && \
			   (Activity == "Suspended") ) || \
			  ( SUSPEND_VANILLA && (Activity != "Suspended") )
#KILL_VANILLA		: $(ActivityTimer) > $(MaxVacateTime)

##  Periodic checkpointing, comment out to disable.  For jobs smaller
##  than 60 megabytes, we periodic checkpoint every 6 hours.  For larger
##  jobs, we only checkpoint every 12 hours.
PERIODIC_CHECKPOINT	: ( (ImageSize < 60000) && \
			    ($(LastCkpt) > (6 * $(HOUR))) ) || \ 
			  ( $(LastCkpt) > (12 * $(HOUR)) )

######################################################################
##  New Startd Settings
######################################################################

##  In an SMP machine, how many of the virtual machines the startd is
##  representing should be "connected" to the console (in other words,
##  notice when there's console activity)?  This defaults to all
##  virtual machines (N in a machine with N CPUs).  This must be an
##  integer ("N" isn't a valid setting, that's just used to represent
##  the default).
#VIRTUAL_MACHINES_CONNECTED_TO_CONSOLE = N

##  In an SMP machine, how many of the virtual machines the startd is
##  representing should be "connected" to the keyboard (for remote tty
##  activity, as well as console activity).  Defaults to 1.
#VIRTUAL_MACHINES_CONNECTED_TO_KEYBOARD = 1

##  In an SMP machine, if there are virtual machines that aren't
##  connected to the keyboard or the console (see the above two
##  settings), the corresponding idle time reported will be the time
##  since the startd was spawned, plus the value of this parameter.
##  It defaults to 20 minutes.  We do this because, if the virtual
##  machine is configured not to care about keyboard activity, we want
##  it to be available to Condor jobs as soon as the startd starts up,
##  instead of having to wait for 15 minutes or more (which is the
##  default time a machine must be idle before Condor will start a
##  job).  If you don't want this boost, just set the value to 0.  If
##  you change your START expression to require more than 15 minutes
##  before a job starts, but you still want jobs to start right away
##  on some of your SMP nodes, just increase this parameter.
#DISCONNECTED_KEYBOARD_IDLE_BOOST = 1200

######################################################################
##  Other new settings
######################################################################

##--------------------------------------------------------------------
##  condor_preen 
##--------------------------------------------------------------------
##  What files should condor_preen remove from the log directory?
INVALID_LOG_FILES	= core
