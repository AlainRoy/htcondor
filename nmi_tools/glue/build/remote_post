#!/usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************


######################################################################
# $Id: remote_post,v 1.4 2007-11-08 22:53:44 nleroy Exp $
# post script to cleanup after a Condor build, successful or not
######################################################################

# autoflush our STDOUT
$| = 1;

use Cwd;
my $BaseDir = getcwd();
my $SrcDir = "$BaseDir/src";
my $pub_dir = "$BaseDir/public";
my $pub_logs = "$pub_dir/logs";
my $pub_testbin = "$pub_dir/testbin";
my $failed = $ENV{_NMI_STEP_FAILED};

if( defined $failed ) { 
	die "Stopping testing since step \"$failed\" failed\n";
}

print "------------------------- ENV DUMP ------------------------\n";
if ($ENV{NMI_PLATFORM} =~ /winnt/) {
    system("set");
} else {
	$ENV{PATH} ="$ENV{PATH}:/sw/bin:/sw/sbin:/usr/kerberos/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin/X11:/usr/X11R6/bin:/usr/local/condor/bin:/usr/local/condor/sbin:/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/ccs/bin:/usr/lib/java/bin";
    system("env");
}
print "------------------------- ENV DUMP ------------------------\n";


######################################################################
# save debugging results
######################################################################

# create a directory to save build logs, if it doesn't already exist
if( ! -d $pub_dir ) {
    mkdir( "$pub_dir", 0777 ) || die("Can't mkdir($pub_dir): $!\n");
}

######################################################################
# tar up build results
######################################################################

my $retryCount = 0;
print "Tarring up results\n";

tryAgain:

open( TAR, "tar zcvf results.tar.gz public|" ) || 
    die "Can't open tar as a pipe: $!\n";
while( <TAR> ) { 
    print;
}
close( TAR );
$tarstatus = $? >> 8;
if( $tarstatus ) {
	$retryCount++;

	# Sometimes, for no apparent reason, tar fails on Windows with
	# file changed as we read it.  The tar docs claim this can happen if the
	# mtime alone changes on an input file.  So, if tar fails, retry again

	if ($retryCount < 5) {
    	print "Can't tar zcf results.tar.gz public: status $tarstatus, trying again...\n";
		sleep(5);
		goto tryAgain;
	}
    die "Can't tar zcf results.tar.gz public: status $tarstatus\n";
}
print "Done tarring results\n";
exit 0;
