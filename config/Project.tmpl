/************************************************************************** 
** There shouldn't be any platform-specific info in this.  By now, all
** the platform, version and OS specific files have been included.
**************************************************************************/

TILDE = Tilde
LIBC = LibC
SIMPLE_LIBC = SimpleLibC
CRT0 = Crt0
SYSCALLS_EXP = SyscallsExp

TOP = Top
TMP_DIR = TmpDir
PLATFORM = Platform

PLATFORM_DIR	=	$(TOP)/$(PLATFORM)
RELEASE_DIR	=	../release_dir
STRIP_DIR	=	../strip_dir
STRIP_CONTRIB	=	../strip_contrib
STATIC_DIR	=	../static_dir
STATIC_CONTRIB	=	../static_contrib

LIB_DIR =		$(RELEASE_DIR)/lib
CONFIG_DIR =		$(TOP)/config
SRC_TREE =		$(TOP)/src
DOC_TREE =		$(TOP)/doc
INCLUDE_DIR =		../h
NEW_INCLUDE_DIR =	../condor_includes
C_PLUS_INCLUDE =	../condor_c++_util
#ifdef X11Include
X11_INCLUDE = X11Include
#else
X11_INCLUDE =           /usr/X11R6/include	
#endif

LIBX = XLibPath
LIBXEXT = XExtLibPath
CC = CCompiler
CPlusPlus = CPlusCompiler
STATIC	= StaticFlag
MKDEPEND = MkDepend
STAR	= *

ifdef SMP_NUM_JOBS
SMP_FLAGS = -j $(SMP_NUM_JOBS)
else
SMP_FLAGS =
endif

SYSCALL_LIB = syscall_lib

#define UNIX_RT0	$(CRT0)
#define UNIX_LIBC	$(LIBC)
#define CKPT_RT0	$(RELEASE_DIR)/lib/condor_rt0.o
#define CONDOR_RT0	$(RELEASE_DIR)/lib/condor_rt0.o
#define CKPT_LIBC	$(RELEASE_DIR)/lib/libckpt.a
#define CONDOR_LIBC	$(RELEASE_DIR)/lib/libcondor.a

#define AR_DELETE(libname,objects) ar d libname objects
#define AR_EXTRACT(libname,objects) ar x libname objects

#if HAS_AR_S_OPTION
#define AR_REPLACE(libname,objects) ar vrs libname objects
#else
#define AR_REPLACE(libname,objects) \
	ar vr libname objects @@\
	ranlib libname
#endif


#if HAS_CP_PRESERVE			/* cp lib w/o changing modify time - don't ranlib */
#	define COPY_LIBRARY(src,dst) cp -p src dst
#	define RANLIB_TOUCH(lib)	/**/
#else
#	if HAS_RANLIB_TOUCH		/* cp lib changes modify time - ranlib -t */
#		define COPY_LIBRARY(src,dst) cp src dst
#		define RANLIB_TOUCH(libname) ranlib -t libname
#	else						/* dumb cp and ranlib - do it the hard way */
#		define COPY_LIBRARY(src,dst) cp src dst
#		define RANLIB_TOUCH(libname) ranlib libname
#	endif
#endif

#ifdef XIncludeFlag
#define XInclude XIncludeFlag
#else
#define XInclude
#endif

OS_FLAG = OperatingSystem
ARCH_FLAG = Architecture

#if !defined( DebugFlag )
#define DebugFlag -g
#endif

DEBUG_FLAG = DebugFlag

#if !defined( YACC )
#define YACC yacc
#endif

#if !defined( PlatformFlags ) 
#define PlatformFlags
#endif

#if !defined( ImakeArchFlag )
#define ImakeArchFlag
#endif

#if !defined( ImakeOpsysFlag )
#define ImakeOpsysFlag
#endif

#if !defined( ImakeOtherFlag )
#define ImakeOtherFlag
#endif

#if !defined( GSS_AUTHENTICATION )

#  define GssAuthentication
#  define ImakeGssFlag

#else

#  define GssAuthentication -DGSS_AUTHENTICATION \
          -I$(GLOBUS_DIR)/include -I$(SSL_DIR)/include 
#  define ImakeGssFlag -DGSS_AUTHENTICATION

  SSL_DIR = /p/condor/workspaces/ssl
  GLOBUS_DIR = /p/condor/workspaces/globus
  AUTH2_LIB = $(GLOBUS_DIR)/lib/libglobus_gss_assist.a \
    $(GLOBUS_DIR)/lib/libglobus_gss.a \
    $(SSL_DIR)/lib/libssl.a $(SSL_DIR)/lib/libcrypto.a 

#endif /* !defined( GSS_AUTHENTICATION ) */

AUTH_FLAGS = GssAuthentication

#define ImakeFlags ImakeArchFlag ImakeOpsysFlag ImakeOtherFlag ImakeGssFlag
#define IMAKE_FLAGS ImakeFlags -I../../config -s Makefile

STD_C_FLAGS = CFlags -I$(INCLUDE_DIR) -I$(NEW_INCLUDE_DIR) \
  -I$(C_PLUS_INCLUDE) XInclude -D$(ARCH_FLAG) -D$(OS_FLAG) \
  $(DEBUG_FLAG) PlatformFlags $(SITE_C_FLAGS) $(AUTH_FLAGS)

/* INST_C_PLUS_FLAGS = $(STD_C_FLAGS) -DWANT_NAMESPACES */

INST_C_PLUS_FLAGS = $(STD_C_FLAGS)
STD_C_PLUS_FLAGS  = $(INST_C_PLUS_FLAGS) -fno-implicit-templates 

CKPT_SERV_LIB = ../condor_ckpt_server/ckpt_server_api.a
QMGMT_LIB = ../condor_schedd.V6/libqmgmt.a
CLASSAD_LIB = ../condor_classad.V6/libclassad.a
IO_LIB = ../condor_io/libcedar.a
CUTIL_LIB = ../condor_util_lib/util_lib.a
CPLUS_LIB = ../condor_c++_util/cplus_lib.a
PROCAPI_LIB = ../condor_procapi/libprocapi.a
ACCT_LIB    = ../condor_accountant.V6/libacct.a
DAEMONCORE_LIB = ../condor_daemon_core.V6/daemon_core.a

STD_LIBS = \
  $(CUTIL_LIB) \
  $(CPLUS_LIB) \
  $(CKPT_SERV_LIB) \
  $(QMGMT_LIB) \
  $(ACCT_LIB) \
  $(PROCAPI_LIB) \
  $(CPLUS_LIB) \
  $(CLASSAD_LIB) \
  $(IO_LIB) \
  $(CPLUS_LIB) \
  $(CUTIL_LIB) \
  $(AUTH2_LIB)
