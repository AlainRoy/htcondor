/**************************************************************************
** These are all the definitions that are shared between all versions of 
** Linux, including i386 vs Alpha, and glibc vs. libc5
**
** At the end of this file, we include the arch/version-specific
** config files as needed.   
**************************************************************************/

/**************************************************************************
** Shared Linux Settings
**************************************************************************/

#define OperatingSystem		LINUX
#define IS_LINUX		YES

/* We want the binaries we release to the CS pool for Linux to be
statically linked to avoid problems */
#define RELEASE_IS_STATIC	YES

#if defined( IS_GLIBC )
#   undef IS_GLIBC
#   define IS_GLIBC		YES
#   define IS_GLIBC_LINUX	YES

/* Yes, we actually need to know the difference between glibc 2.0 and 2.1 */
#if defined( IS_GLIBC20 )
#   undef IS_GLIBC20
#	define IS_GLIBC20	YES
#   define GlibCFlag		-DGLIBC=GLIBC -DGLIBC20=GLIBC20
#   define HAS_DAGMAN_HELPER NO
#elif defined( IS_GLIBC21 )
#	undef IS_GLIBC21
#	define IS_GLIBC21	YES
#   define GlibCFlag		-DGLIBC=GLIBC -DGLIBC21=GLIBC21
#   define HAS_DAGMAN_HELPER NO
#elif defined( IS_GLIBC22 )
#	undef IS_GLIBC22
#	define IS_GLIBC22	YES
#   define GlibCFlag		-DGLIBC=GLIBC -DGLIBC22=GLIBC22
#   define HAS_DAGMAN_HELPER YES
#elif defined( IS_GLIBC23 )
#	undef IS_GLIBC23
#	define IS_GLIBC23	YES
#   define GlibCFlag		-DGLIBC=GLIBC -DGLIBC23=GLIBC23
#   define HAS_DAGMAN_HELPER YES
#endif

#else /* Non IS_GLIBC */
#   define GlibCFlag
#   define HAS_DAGMAN_HELPER NO
#endif

#define PlatformFlags		ArchOptimizeFlag GlibCFlag

#define PlatformLdFlags		-lresolv -ldl

#define SimpleLibC /usr/lib/libc.a
#define LibC SimpleLibC

#define IS_V5				YES
#define DOES_CHECKPOINTING		YES
#define DOES_COMPRESS_CKPT		YES
#define DOES_REMOTE_SYSCALLS		YES
#define DOES_SAVE_SIGSTATE		YES
#define DO_BENCHMARKING			YES
#define HAS_DYNAMIC_USER_JOBS		NO

#define NEEDS_KBDD			NO	
#define HAS_NDBM			YES
#define HAS_FSTATFS			YES
#define NEEDS_XDR_FLOAT			NO
#define NEEDS_GROW_STACK		NO
#define NEEDS_SPECIAL_SIGVEC		NO
#define NEEDS_FAKE_GETMNT		YES
#define HAS_VOID_SIGNAL_RETURN		YES
#define HAS_AR_S_OPTION			YES
#define HAS_RANLIB_TOUCH		NO
/*?????*/
#define HAS_CP_PRESERVE			NO
#define NEEDS_SPECIAL_SETJMP		NO
#define HAS_FORTRAN			YES
#ifndef FORTRAN_HAS_RECURSION
#  define FORTRAN_HAS_RECURSION		NO
#endif
#define HAS_FLOCK			NO
#define HAS_ADJTIME			YES
#define HAS_GETDTABLESIZE		YES
#define HAS_GETHOSTNAME			YES
#define HAS__UTSSYS			NO
#define HAS_GETPAGESIZE			YES
#define HAS_GETPGRP			YES
#define HAS_GETPGRP2			NO
#define HAS_KILLPG			YES
#define HAS_SETHOSTNAME			YES
#define HAS_UTIMES			YES
#define HAS_UTIME			YES
#define HAS_VHANGUP			YES
#define HAS_SETEGID			YES
#define HAS_SETEUID			YES
#define HAS_GETWD			YES
#define HAS_INSQUE			YES
#define HAS_PVM				YES
#define PVM_ARCH			LINUX
#define HAS_SETLINEBUF			YES
#define MALLOC_DEBUG			NO
#define HAS_STATIC			YES
#define HAS_DLOPEN			YES

#define StaticFlag	-static
#define UnixName /vmlinuz		/* pathname of the system executable */

#ifndef Ctags
#define Ctags ctags -t
#endif Ctags

#ifndef MkDepend
#define MkDepend Tilde/CONDOR.new/GENERIC/mdepend.sh
#endif MkDepend

#define YACC byacc


/**************************************************************************
** Include Arch-specific config files
**************************************************************************/

#ifdef ArchIncludeFile
#include ArchIncludeFile
#endif

