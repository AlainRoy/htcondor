/**************************************************************************
** These are all the definitions that are shared between all versions of 
** IRIX.
**
** At the end of this file, we include the version-specific config
** files as needed.    
**************************************************************************/

/**************************************************************************
** Shared IRIX Settings
**************************************************************************/


#define IS_V5				YES

#define NEEDS_KBDD			YES

#define IS_CLIPPED			YES
#define DOES_CHECKPOINTING		NO
#define DOES_REMOTE_SYSCALLS		NO
#define DOES_SAVE_SIGSTATE		YES
#define DO_BENCHMARKING			YES

#define NEEDS_64BIT_SYSCALLS	YES
#define NEEDS_64BIT_STRUCTS		YES

#define HAS_NDBM			YES
#define HAS_FSTATFS			YES
#define NEEDS_XDR_FLOAT			NO
#define NEEDS_GROW_STACK		NO
#define NEEDS_SPECIAL_SIGVEC		NO
#define NEEDS_FAKE_GETMNT		YES
#define HAS_VOID_SIGNAL_RETURN		NO
#define HAS_AR_S_OPTION			YES
#define HAS_RANLIB_TOUCH		NO
#define HAS_CP_PRESERVE			YES
#define NEEDS_SPECIAL_SETJMP		NO
#define HAS_FLOCK			YES
#define HAS_ADJTIME			YES
#define HAS_GETDIRENTRIES		NO
#define HAS_GETDTABLESIZE		YES
#define HAS_GETHOSTNAME			YES
#define HAS__UTSSYS			NO
#define HAS_GETPAGESIZE			YES
#define HAS_GETPGRP			YES
#define HAS_GETPGRP2			NO
#define HAS_KILLPG			YES
#define HAS_SETHOSTNAME			YES
#define HAS_UTIMES			YES
#define HAS_UTIME			NO
#define HAS_VHANGUP			YES
#define HAS_SETEGID			YES
#define HAS_SETEUID			YES
#define HAS_GETWD			YES
#define HAS_INSQUE			YES
#define WANT_PVM			NO
#define PVM_ARCH			SGI64
#define HAS_DLOPEN			NO
#define HAS_DAGMAN_HELPER   NO
#define HAS_UTMPX			YES


/**************************************************************************
** Include OS version-specific config files
**************************************************************************/

#ifdef OSVersionIncludeFile
#include OSVersionIncludeFile
#endif


/**************************************************************************
** Finally, deal with shared settings that depend on version-specific
** settings.
**************************************************************************/

/* First, provide some defaults, just in case nothing is set */
#if !defined( MIPS_VERSION )
#   define MIPS_VERSION 2
#endif
#if !( IS_O32 || IS_N32 || IS_N64 )
#   define IS_O32 YES
#endif

/* Now, make sure we don't think we want two different ABI's */
#if (IS_O32 && (IS_N32 || IS_N64)) || (IS_N32 && IS_N64)
#error MULTIPLE IS_<ABI> DEFINITIONS, PLEASE INVESTIGATE!!!
#endif

/* Now, set everything that depends on which ABI we are */
#if( IS_O32 )
#   define AbiFlags 
#   define BaseLibPath /usr/lib
#elif( IS_N32 )
#   define AbiFlags -mabi=n32
#   define BaseLibPath /usr/lib32
#elif( IS_N64 )
#   define AbiFlags -mabi=n64
#   define BaseLibPath /usr/lib64
#else
#error UNKNOWN ABI_VERSION
#endif

/* Now, set everything that depends on which MIPS version we are */
#if ( MIPS_VERSION == 2 )
#   define LibPath	BaseLibPath
#   define MipsFlags
#elif ( MIPS_VERSION == 3 )
#   define LibPath	Concat(BaseLibPath,/mips3)
#   define MipsFlags -mips3
#elif ( MIPS_VERSION == 4 )
#   define LibPath	Concat(BaseLibPath,/mips4)
#   define MipsFlags -mips4
#else
#error UNKNOWN MIPS_VERSION
#endif

/* 
   Now that we finally know everything, define all the things we
   actually care about.
*/
#define LibC    	Concat(LibPath,/libc.so.1)
#define CrtN		Concat(LibPath,/crtn.o)

/* add certain flags which will only work with gnu gcc because
PlatformFlags is used by the vendor compiler in the test suite */
#define PlatformGccFlags AbiFlags

#define PlatformFlags VersionPlatformFlags MipsFlags

#define PlatformLdFlags -lelf -lgen


